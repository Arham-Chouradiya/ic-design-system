{"version":3,"file":"6419-9714c0eea24300ee4f78.js","mappings":"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","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-tab-context.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-90721b3c.js';\nimport { I as IcThemeForegroundEnum } from './types-dd515332.js';\nconst TabContext = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.tabSelect = createEvent(this, \"tabSelect\", 7);\n    this.icTabSelect = createEvent(this, \"icTabSelect\", 7);\n    // Sets attributes to link tabs and tabpanels\n    this.linkTabs = () => {\n      this.tabs.forEach((tab, index) => {\n        const tabId = \"ic-tab-\".concat(index, \"-context-\").concat(this.contextId);\n        const tabPanelId = \"ic-tab-panel-\".concat(index, \"-context-\").concat(this.contextId);\n        const shared = \"ic-tab--\".concat(index, \"-context-\").concat(this.contextId);\n        tab.setAttribute(\"id\", tabId);\n        tab.tabId = shared;\n        tab.tabPosition = index;\n        tab.setAttribute(\"aria-controls\", tabPanelId);\n        tab.setAttribute(\"context-id\", this.contextId);\n        this.tabPanels[index].setAttribute(\"id\", tabPanelId);\n        this.tabPanels[index].panelId = shared;\n        this.tabPanels[index].tabPosition = index;\n        this.tabPanels[index].setAttribute(\"aria-labelledby\", tabId);\n        if (this.appearance === IcThemeForegroundEnum.Light) {\n          tab.appearance = this.appearance;\n          this.tabPanels[index].appearance = this.appearance;\n        }\n      });\n      if (this.appearance === IcThemeForegroundEnum.Light) {\n        this.tabGroup.appearance = this.appearance;\n      }\n    };\n    // Gets tabs and tabpanels with the same context ID\n    this.getChildren = () => {\n      this.tabGroup = Array.from(this.host.querySelectorAll(\"ic-tab-group\")).find(tabGroup => tabGroup.contextId === this.contextId);\n      this.tabs = Array.from(this.tabGroup.querySelectorAll(\"ic-tab\")).filter(tab => tab.contextId === this.contextId);\n      this.enabledTabs = this.getEnabledTabs();\n      this.tabPanels = Array.from(this.host.querySelectorAll(\"ic-tab-panel\"));\n    };\n    // Determines how keyboard navigation is to be handled based on the activation type\n    this.attatchEventListeners = () => {\n      if (this.activationType === \"automatic\") {\n        this.tabGroup.addEventListener(\"keydown\", event => {\n          this.handleKeyBoardNavAutomatic(event);\n        });\n      } else {\n        this.tabGroup.addEventListener(\"keydown\", event => {\n          this.handleKeyBoardNavManual(event);\n        });\n      }\n    };\n    // Determines whether the selected tab is being controlled within the component\n    // or by the user (via selectedTabIndex and onIcTabSelect)\n    this.setControlledMode = () => {\n      if (this.selectedTabIndex !== undefined) {\n        this.controlledMode = true;\n        this.selectedTab = this.selectedTabIndex;\n      }\n    };\n    // Sets the tab that is selected on initial render\n    this.setInitialTab = () => {\n      if (this.controlledMode) {\n        this.selectedTab = this.selectedTabIndex;\n        this.focusedTabIndex = this.selectedTabIndex;\n      } else {\n        const firstEnabledTabIndex = this.tabs.findIndex(tab => tab.tabId === this.enabledTabs[0].tabId);\n        this.selectedTab = firstEnabledTabIndex;\n        this.focusedTabIndex = firstEnabledTabIndex;\n      }\n    };\n    // Passes the selected tab to the tab and tab panel components\n    this.configureTabs = () => {\n      this.enabledTabs.forEach(tab => {\n        tab.selected = tab.tabPosition === this.selectedTab;\n      });\n      this.tabPanels.forEach(tabPanel => {\n        tabPanel.selectedTab = this.tabs[this.selectedTab].tabId;\n      });\n    };\n    this.getEnabledTabs = () => {\n      return Array.from(this.tabs).filter(child => !child.disabled);\n    };\n    this.getIndexOfEnabledTab = allTabsIndex => {\n      return this.enabledTabs.findIndex(tab => tab.tabId === this.tabs[allTabsIndex].tabId);\n    };\n    // Sets focus on tab and selects it\n    this.keyboardSelectTab = enabledTabIndex => {\n      const newIndex = this.tabs.findIndex(tab => tab.tabId === this.enabledTabs[enabledTabIndex].tabId);\n      this.enabledTabs[enabledTabIndex].focus();\n      if (!this.controlledMode) {\n        this.selectedTab = newIndex;\n      } else {\n        this.icTabSelect.emit({\n          tabIndex: newIndex\n        });\n        this.tabSelect.emit({\n          tabIndex: newIndex\n        });\n      }\n    };\n    // Sets focus on tab without selecting it (for manual activation)\n    this.keyboardFocusTab = enabledTabIndex => {\n      const newIndex = this.tabs.findIndex(tab => tab.tabId === this.enabledTabs[enabledTabIndex].tabId);\n      this.enabledTabs[enabledTabIndex].focus();\n      this.focusedTabIndex = newIndex;\n    };\n    this.handleKeyBoardNavAutomatic = event => {\n      const key = event.key;\n      const enabledTabIndex = this.getIndexOfEnabledTab(this.selectedTab);\n      let preventDefault = true;\n      switch (key) {\n        case \"Home\":\n          this.keyboardSelectTab(0);\n          break;\n        case \"End\":\n          this.keyboardSelectTab(this.enabledTabs.length - 1);\n          break;\n        case \"ArrowRight\":\n          if (enabledTabIndex < this.enabledTabs.length - 1) {\n            this.keyboardSelectTab(enabledTabIndex + 1);\n          } else {\n            this.keyboardSelectTab(0);\n          }\n          break;\n        case \"ArrowLeft\":\n          if (enabledTabIndex > 0) {\n            this.keyboardSelectTab(enabledTabIndex - 1);\n          } else {\n            this.keyboardSelectTab(this.enabledTabs.length - 1);\n          }\n          break;\n        default:\n          preventDefault = false;\n      }\n      if (preventDefault) event.preventDefault();\n    };\n    this.handleKeyBoardNavManual = event => {\n      const key = event.key;\n      const enabledTabIndex = this.getIndexOfEnabledTab(this.focusedTabIndex);\n      let preventDefault = true;\n      switch (key) {\n        case \"Home\":\n          this.keyboardFocusTab(0);\n          break;\n        case \"End\":\n          this.keyboardFocusTab(this.enabledTabs.length - 1);\n          break;\n        case \"ArrowRight\":\n          if (enabledTabIndex < this.enabledTabs.length - 1) {\n            this.keyboardFocusTab(enabledTabIndex + 1);\n          } else {\n            this.keyboardFocusTab(0);\n          }\n          break;\n        case \"ArrowLeft\":\n          if (enabledTabIndex > 0) {\n            this.keyboardFocusTab(enabledTabIndex - 1);\n          } else {\n            this.keyboardFocusTab(this.enabledTabs.length - 1);\n          }\n          break;\n        case \"Enter\":\n          this.keyboardSelectTab(this.focusedTabIndex);\n          break;\n        case \" \":\n          this.keyboardSelectTab(this.focusedTabIndex);\n          break;\n        default:\n          preventDefault = false;\n      }\n      if (preventDefault) event.preventDefault();\n    };\n    this.contextId = \"default\";\n    this.activationType = \"automatic\";\n    this.selectedTabIndex = undefined;\n    this.appearance = \"dark\";\n    this.selectedTab = undefined;\n  }\n  updateSelectedTab(newValue) {\n    this.selectedTab = newValue;\n  }\n  tabClickHandler(event) {\n    if (this.selectedTabIndex === undefined && event.detail.contextId === this.contextId) {\n      this.selectedTab = event.detail.position;\n    }\n    this.icTabSelect.emit({\n      tabIndex: event.detail.position\n    });\n    this.tabSelect.emit({\n      tabIndex: event.detail.position\n    });\n  }\n  componentDidLoad() {\n    this.setControlledMode();\n    this.getChildren();\n    this.linkTabs();\n    this.attatchEventListeners();\n    this.setInitialTab();\n    this.configureTabs();\n  }\n  componentWillUpdate() {\n    this.configureTabs();\n  }\n  disconnectedCallback() {\n    if (this.activationType === \"manual\") {\n      this.tabGroup.removeEventListener(\"keydown\", event => this.handleKeyBoardNavManual(event));\n    } else {\n      this.tabGroup.removeEventListener(\"keydown\", event => this.handleKeyBoardNavAutomatic(event));\n    }\n  }\n  render() {\n    return h(\"slot\", null);\n  }\n  get host() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"selectedTabIndex\": [\"updateSelectedTab\"]\n    };\n  }\n};\nexport { TabContext as ic_tab_context };"],"names":["TabContext","constructor","hostRef","r","this","tabSelect","c","icTabSelect","linkTabs","tabs","forEach","tab","index","tabId","concat","contextId","tabPanelId","shared","setAttribute","tabPosition","tabPanels","panelId","appearance","I","tabGroup","getChildren","Array","from","host","querySelectorAll","find","filter","enabledTabs","getEnabledTabs","attatchEventListeners","activationType","addEventListener","event","handleKeyBoardNavAutomatic","handleKeyBoardNavManual","setControlledMode","undefined","selectedTabIndex","controlledMode","selectedTab","setInitialTab","focusedTabIndex","firstEnabledTabIndex","findIndex","configureTabs","selected","tabPanel","child","disabled","getIndexOfEnabledTab","allTabsIndex","keyboardSelectTab","enabledTabIndex","newIndex","focus","emit","tabIndex","keyboardFocusTab","key","preventDefault","length","updateSelectedTab","newValue","tabClickHandler","detail","position","componentDidLoad","componentWillUpdate","disconnectedCallback","removeEventListener","render","h","g","watchers"],"sourceRoot":""}