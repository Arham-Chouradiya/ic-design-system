{"version":3,"file":"8891-627cb15b34c81594fb9e.js","mappings":"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","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-stepper.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-90721b3c.js';\nimport { A as pxToRem, c as checkResizeObserver } from './helpers-b2b47a7d.js';\nimport './types-dd515332.js';\nconst icStepperCss = \":host{display:flex;width:100%}.step-item-list{display:flex;margin:0;padding:0}:host(.default:not(.aligned-left)) .step-item-list{flex:auto}:host(.compact) ul ::slotted(ic-step){display:none}:host(.compact) ul ::slotted(ic-step.show){display:flex}:host(.compact) ul ::slotted(ic-step.hide){display:none;opacity:0;visibility:hidden}\";\nconst Stepper = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.resizeObserver = null;\n    // Get all steps currently within this stepper\n    this.getChildren = () => {\n      this.steps = Array.from(this.el.querySelectorAll(\"ic-step\"));\n      this.stepsWithStepTitles = Array.from(this.el.querySelectorAll(\"ic-step[step-title]\"));\n    };\n    // Inform the user that stepTitles are required on all steps in a compact stepper\n    this.checkStepTitles = () => {\n      if (this.stepsWithStepTitles.length < this.steps.length && this.variantOverride && this.variant === \"compact\") {\n        this.noOfResizes = this.noOfResizes + 1;\n        if (this.noOfResizes === 1) {\n          console.error(\"The prop 'step-title' (web components) / 'stepTitle' (react) is required for all steps of the Stepper component (compact variant)\");\n        }\n      }\n    };\n    this.setStepTypes = () => {\n      this.getChildren();\n      this.stepTypes = [];\n      for (let i = 0; i < this.steps.length; i++) {\n        this.stepTypes.push(\"active\");\n      }\n    };\n    this.setStepperWidth = () => {\n      this.alignedFullWidth = this.variant === \"default\" && this.aligned === \"full-width\";\n      const lastStep = this.steps[this.steps.length - 1];\n      lastStep.style.maxWidth = \"none\";\n      if (this.alignedFullWidth) {\n        this.stepperWidth = this.el.offsetWidth;\n        lastStep.style.maxWidth = pxToRem(\"\".concat(this.stepperWidth / this.steps.length, \"px\"));\n        this.lastStepWidth = lastStep.offsetWidth;\n      }\n    };\n    this.initialiseStepStates = () => {\n      this.steps.forEach((step, index) => {\n        // Set variant\n        step.variant = this.variant;\n        // Assign stepNum to each step\n        step.stepNum = index + 1;\n        // Assign lastStep to final step\n        step.lastStep = index === this.steps.length - 1;\n        step.lastStepNum = this.steps.length;\n        if (step.stepType !== \"current\") {\n          step.current = false;\n          this.stepTypes[index] = step.stepType;\n        } else {\n          step.current = true;\n        }\n        const stepTitleArea = step.shadowRoot && step.shadowRoot.querySelector(\".step > .step-title-area\");\n        if (this.stepsWithStepTitles.length == 0 && this.variantOverride) {\n          if (this.variant === \"compact\") {\n            this.autoSetStepTitles = true;\n            if (this.autoSetStepTitles) {\n              step.stepTitle = \"Step \" + step.stepNum;\n              stepTitleArea && stepTitleArea.querySelector(\".step-title\").setAttribute(\"aria-hidden\", \"true\");\n            }\n          }\n          if (this.variant === \"default\") {\n            this.autoSetStepTitles = false;\n            if (!this.autoSetStepTitles) {\n              step.stepTitle = undefined;\n              stepTitleArea && stepTitleArea.querySelector(\".step-title\").removeAttribute(\"aria-hidden\");\n            }\n          }\n        }\n        if (this.variant === \"compact\") {\n          if (step.current === true || step.stepType === \"current\") {\n            step.classList.remove(\"hide\");\n            step.classList.add(\"show\");\n          } else if (step.classList.contains(\"show\")) {\n            step.classList.remove(\"show\");\n            step.classList.add(\"hide\");\n          }\n          if (!step.lastStep) {\n            step.nextStepTitle = this.steps[index + 1].stepTitle;\n            step.progress = step.stepNum / this.steps.length * 100;\n          } else if (step.lastStep && this.stepTypes[index] !== \"completed\") {\n            step.progress = 95;\n          } else {\n            step.progress = 100;\n          }\n          if (this.hideStepInfo && stepTitleArea !== null) {\n            stepTitleArea.classList.remove(\"visually-hidden\");\n          }\n          step.compactStepStyling = this.stepTypes[index];\n        }\n        if (this.variant === \"default\") {\n          if (!step.lastStep) {\n            if (this.alignedFullWidth) {\n              step.style.width = pxToRem(\"\".concat((this.stepperWidth - this.lastStepWidth) / (this.steps.length - 1), \"px\"));\n              step.style.minWidth = pxToRem(\"148px\");\n            }\n          } else if (step.lastStep) {\n            step.classList.add(\"last-step\");\n            if (this.alignedFullWidth) {\n              step.style.maxWidth = \"\".concat(this.lastStepWidth, \"px\");\n            } else {\n              step.style.maxWidth = this.connectorWidth > 100 ? pxToRem(\"\".concat(this.connectorWidth + 48, \"px\")) : pxToRem(\"148px\");\n            }\n          }\n          if (this.aligned === \"left\") {\n            step.style.width = this.connectorWidth > 100 ? pxToRem(\"\".concat(this.connectorWidth + 48, \"px\")) : pxToRem(\"148px\");\n            const stepConnect = step.shadowRoot.querySelector(\".step > .step-top > .step-connect\");\n            if (stepConnect) {\n              stepConnect.style.width = this.connectorWidth > 100 ? pxToRem(\"\".concat(this.connectorWidth, \"px\")) : pxToRem(\"100px\");\n            }\n          }\n          if (this.hideStepInfo && stepTitleArea !== null) {\n            stepTitleArea.classList.add(\"visually-hidden\");\n          }\n        }\n      });\n    };\n    this.overrideVariant = () => {\n      let minDefaultStepperWidth = 148 * this.steps.length;\n      if (this.aligned === \"left\" && this.connectorWidth > 100) {\n        minDefaultStepperWidth = (this.connectorWidth + 48) * this.steps.length;\n      }\n      if (this.variantOverride) {\n        if (this.el.clientWidth < minDefaultStepperWidth) {\n          this.variant = \"compact\";\n          this.getChildren();\n        } else {\n          this.variant = \"default\";\n          this.getChildren();\n        }\n      }\n    };\n    this.resizeObserverCallback = () => {\n      this.getChildren();\n      this.checkStepTitles();\n      this.overrideVariant();\n      this.setStepperWidth();\n      this.initialiseStepStates();\n    };\n    this.runResizeObserver = () => {\n      this.resizeObserver = new ResizeObserver(() => {\n        this.resizeObserverCallback();\n      });\n      this.resizeObserver.observe(this.el);\n    };\n    this.aligned = \"full-width\";\n    this.variant = \"default\";\n    this.connectorWidth = 100;\n    this.hideStepInfo = false;\n    this.stepperWidth = document.querySelector(\"ic-stepper\").getBoundingClientRect().width;\n    this.lastStepWidth = 0;\n    this.stepTypes = [];\n    this.alignedFullWidth = true;\n    this.autoSetStepTitles = true;\n    this.variantOverride = this.variant !== \"compact\";\n    this.noOfResizes = 0;\n  }\n  componentWillLoad() {\n    this.setStepTypes();\n    if (this.variant === \"compact\") {\n      this.variantOverride = false;\n    }\n  }\n  componentDidLoad() {\n    checkResizeObserver(this.runResizeObserver);\n  }\n  disconnectedCallback() {\n    if (this.resizeObserver !== null) {\n      this.resizeObserver.disconnect();\n    }\n  }\n  render() {\n    return h(Host, {\n      class: {\n        [\"\".concat(this.variant)]: true,\n        [\"aligned-left\"]: this.variant === \"default\" && this.aligned === \"left\"\n      }\n    }, h(\"ul\", {\n      class: \"step-item-list\"\n    }, h(\"slot\", null)));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nStepper.style = icStepperCss;\nexport { Stepper as ic_stepper };"],"names":["Stepper","constructor","hostRef","r","this","resizeObserver","getChildren","steps","Array","from","el","querySelectorAll","stepsWithStepTitles","checkStepTitles","length","variantOverride","variant","noOfResizes","console","error","setStepTypes","stepTypes","i","push","setStepperWidth","alignedFullWidth","aligned","lastStep","style","maxWidth","stepperWidth","offsetWidth","concat","lastStepWidth","initialiseStepStates","forEach","step","index","stepNum","lastStepNum","stepType","current","stepTitleArea","shadowRoot","querySelector","autoSetStepTitles","stepTitle","setAttribute","undefined","removeAttribute","classList","remove","add","contains","progress","nextStepTitle","hideStepInfo","compactStepStyling","connectorWidth","width","minWidth","stepConnect","overrideVariant","minDefaultStepperWidth","clientWidth","resizeObserverCallback","runResizeObserver","ResizeObserver","observe","document","getBoundingClientRect","componentWillLoad","componentDidLoad","c","disconnectedCallback","disconnect","render","h","H","class","g"],"sourceRoot":""}