{"version":3,"file":"758-3bf6f98ab767b1c10d5d.js","mappings":"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","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-text-field.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-a77644e1.js';\nimport { a as IcInformationStatus } from './types-dd515332.js';\nimport { K as debounceEvent, n as inheritAttributes, d as addFormResetListener, r as removeDisabledFalse, a as onComponentRequiredPropUndefined, e as removeFormResetListener, j as getInputDescribedByText, f as renderHiddenInput, i as isSlotUsed, L as isEmptyString, p as IC_INHERITED_ARIA } from './helpers-8e57082b.js';\nconst icTextFieldCss = \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0;}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px;}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}:host{display:block}:host(.fullwidth){width:100%}::-moz-placeholder{color:var(--ic-color-tertiary-text);opacity:1}::placeholder{color:var(--ic-color-tertiary-text);opacity:1}input,textarea{border:0;border-radius:var(--ic-border-radius);background-color:var(--ic-architectural-white);line-height:1.5rem;letter-spacing:0.005rem;width:100%;padding-right:var(--ic-space-xs);padding-left:var(--ic-space-xs)}textarea{min-height:var(--ic-space-lg);resize:vertical;padding-top:0.375rem}input:focus,textarea:focus{border:0;outline:0}input:disabled,textarea:disabled{color:var(--ic-architectural-200)}input.readonly,textarea.readonly{color:var(--ic-color-primary-text)}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=\\\"number\\\"]{-moz-appearance:textfield}textarea.no-resize{resize:none}.maxlengthtext{color:var(--ic-color-secondary-text)}.disabled{color:var(--ic-architectural-200)}.no-left-pad{padding-left:0}::slotted([slot=\\\"icon\\\"]){fill:var(--ic-color-tertiary-text)}.has-value ::slotted([slot=\\\"icon\\\"]){fill:var(--ic-color-primary-text)}.charcount{margin-right:calc(-1 * var(--ic-space-xxxs))}input[type=\\\"search\\\"]::-webkit-search-cancel-button,input[type=\\\"search\\\"]::-webkit-search-decoration,input[type=\\\"search\\\"]::-webkit-search-results-button,input[type=\\\"search\\\"]::-webkit-search-results-decoration{display:none}input[type=\\\"search\\\"].truncate-value{width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}@media (forced-colors: active){input.readonly,textarea.readonly{color:canvastext}.has-value ::slotted([slot=\\\"icon\\\"]){fill:currentcolor}}\";\nlet inputIds = 0;\nconst TextField = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.icKeydown = createEvent(this, \"icKeydown\", 7);\n    this.icInput = createEvent(this, \"icInput\", 7);\n    this.icBlur = createEvent(this, \"icBlur\", 7);\n    this.icFocus = createEvent(this, \"icFocus\", 7);\n    this.icChange = createEvent(this, \"icChange\", 7);\n    this.getValidationText = createEvent(this, \"getValidationText\", 7);\n    this.inheritedAttributes = {};\n    this.showLeftIcon = this.hasLeftIconSlot();\n    this.onInput = ev => {\n      this.value = ev.target.value;\n      this.icInput.emit({\n        value: this.value\n      });\n    };\n    this.onBlur = ev => {\n      const value = ev.target.value;\n      this.icBlur.emit({\n        value: value\n      });\n    };\n    this.onFocus = ev => {\n      const value = ev.target.value;\n      this.icFocus.emit({\n        value: value\n      });\n    };\n    this.isTextArea = () => {\n      return this.rows > 1;\n    };\n    this.getInlineValidationText = () => {\n      this.getValidationText.emit({\n        value: this.validationText\n      });\n    };\n    this.hasStatus = status => {\n      return status !== \"\" && !this.disabled;\n    };\n    this.showStatusText = status => {\n      return this.hasStatus(status) && !(status == IcInformationStatus.Success && this.validationInline) && !this.validationInlineInternal;\n    };\n    this.handleFormReset = () => {\n      this.value = this.initialValue;\n    };\n    this.inputId = \"ic-text-field-input-\".concat(inputIds++);\n    this.label = undefined;\n    this.required = false;\n    this.disabled = false;\n    this.readonly = false;\n    this.placeholder = \"\";\n    this.fullWidth = false;\n    this.hideLabel = false;\n    this.helperText = \"\";\n    this.rows = 1;\n    this.resize = false;\n    this.small = false;\n    this.value = \"\";\n    this.min = undefined;\n    this.max = undefined;\n    this.maxLength = 0;\n    this.validationStatus = \"\";\n    this.validationText = \"\";\n    this.validationInline = false;\n    this.validationInlineInternal = false;\n    this.autocapitalize = \"off\";\n    this.autocomplete = \"off\";\n    this.autocorrect = \"off\";\n    this.autoFocus = false;\n    this.debounce = 0;\n    this.type = \"text\";\n    this.inputmode = \"text\";\n    this.name = this.inputId;\n    this.spellcheck = false;\n    this.ariaActiveDescendant = undefined;\n    this.truncateValue = undefined;\n    this.ariaExpanded = undefined;\n    this.ariaOwns = undefined;\n    this.ariaAutocomplete = undefined;\n    this.role = undefined;\n    this.hiddenInput = true;\n    this.numChars = 0;\n    this.maxLengthExceeded = false;\n    this.minValueUnattained = false;\n    this.maxValueExceeded = false;\n    this.initialValue = this.value;\n  }\n  debounceChanged() {\n    this.icChange = debounceEvent(this.icChange, this.debounce);\n  }\n  watchValueHandler(newValue) {\n    if (this.inputEl && this.inputEl.value !== newValue) {\n      this.inputEl.value = newValue;\n    }\n    this.numChars = newValue.length;\n    if (this.type === \"number\") {\n      if (newValue && Number(newValue) < Number(this.min)) {\n        this.minValueUnattained = true;\n      } else {\n        this.minValueUnattained = false;\n      }\n      if (Number(newValue) > Number(this.max)) {\n        this.maxValueExceeded = true;\n      } else {\n        this.maxValueExceeded = false;\n      }\n    }\n    if (this.maxLength > 0) {\n      if (newValue.length > this.maxLength) {\n        this.maxLengthExceeded = true;\n      } else {\n        this.maxLengthExceeded = false;\n      }\n    }\n    this.icChange.emit({\n      value: newValue\n    });\n  }\n  /**\n   * Sets focus on the native `input`.\n   */\n  async setFocus() {\n    if (this.inputEl) {\n      this.inputEl.focus();\n    }\n  }\n  handleKeyDown(ev) {\n    this.icKeydown.emit({\n      event: ev\n    });\n  }\n  hasLeftIconSlot() {\n    const iconEl = this.el.querySelector(\"[slot=\\\"icon\\\"]\");\n    return iconEl !== null;\n  }\n  connectedCallback() {\n    this.debounceChanged();\n  }\n  componentWillLoad() {\n    this.watchValueHandler(this.value);\n    this.inheritedAttributes = inheritAttributes(this.el, [...IC_INHERITED_ARIA, \"title\", \"aria-autocomplete\", \"aria-haspopup\"]);\n    if (this.readonly) {\n      this.maxLengthExceeded = false;\n      this.maxValueExceeded = false;\n      this.minValueUnattained = false;\n    }\n    addFormResetListener(this.el, this.handleFormReset);\n    removeDisabledFalse(this.disabled, this.el);\n  }\n  componentDidLoad() {\n    onComponentRequiredPropUndefined([{\n      prop: this.label,\n      propName: \"label\"\n    }], \"Text Field\");\n    if (this.validationInlineInternal) {\n      this.getInlineValidationText();\n    }\n  }\n  disconnectedCallback() {\n    removeFormResetListener(this.el, this.handleFormReset);\n  }\n  render() {\n    const {\n      inputId,\n      name,\n      label,\n      required,\n      small,\n      placeholder,\n      helperText,\n      rows,\n      resize,\n      disabled,\n      value,\n      min,\n      max,\n      maxLength,\n      numChars,\n      readonly,\n      maxLengthExceeded,\n      minValueUnattained,\n      maxValueExceeded,\n      validationStatus,\n      validationText,\n      validationInline,\n      validationInlineInternal,\n      spellcheck,\n      inputmode,\n      fullWidth,\n      truncateValue,\n      hiddenInput\n    } = this;\n    const disabledMode = readonly ? true : disabled;\n    const placeholderText = disabled ? \"\" : placeholder;\n    const currentStatus = maxLengthExceeded || maxValueExceeded || minValueUnattained ? IcInformationStatus.Error : validationStatus;\n    const currentValidationText = maxLengthExceeded ? \"Maximum length exceeded\" : maxValueExceeded ? \"Maximum value of \".concat(max, \" exceeded\") : minValueUnattained ? \"Minimum value of \".concat(min, \" not met\") : validationText;\n    const maxNumChars = readonly ? 0 : maxLength;\n    const messageAriaLive = maxLengthExceeded || maxValueExceeded || minValueUnattained || maxLength === 0 && currentStatus === IcInformationStatus.Error ? \"assertive\" : \"polite\";\n    const showStatusText = this.showStatusText(currentStatus);\n    const multiline = this.isTextArea();\n    const hiddenCharCountDescId = maxLength > 0 ? inputId + \"-charcount-desc\" : \"\";\n    const describedBy = (hiddenCharCountDescId + \" \" + getInputDescribedByText(inputId, helperText !== \"\", showStatusText)).trim();\n    if (this.showLeftIcon && !readonly && disabledMode) {\n      this.showLeftIcon = false;\n    }\n    const invalid = currentStatus === IcInformationStatus.Error ? \"true\" : \"false\";\n    const disabledText = disabledMode && !readonly;\n    if (hiddenInput) {\n      renderHiddenInput(true, this.el, name, value, disabledMode);\n    }\n    return h(Host, {\n      class: {\n        [\"fullwidth\"]: fullWidth\n      }\n    }, h(\"ic-input-container\", {\n      readonly: readonly,\n      disabled: disabledMode\n    }, !this.hideLabel && h(\"ic-input-label\", {\n      for: inputId,\n      label: label,\n      helperText: helperText,\n      required: required,\n      disabled: disabledText,\n      readonly: readonly\n    }), h(\"ic-input-component-container\", {\n      small: small,\n      validationStatus: currentStatus,\n      multiLine: multiline,\n      disabled: disabledMode,\n      readonly: readonly,\n      validationInline: validationInline,\n      fullWidth: fullWidth\n    }, this.showLeftIcon && h(\"span\", {\n      class: {\n        [\"readonly\"]: readonly,\n        [\"has-value\"]: value.length > 0\n      },\n      slot: \"left-icon\"\n    }, h(\"slot\", {\n      name: \"icon\"\n    })), !multiline && h(\"input\", Object.assign({\n      id: inputId,\n      name: name,\n      ref: el => this.inputEl = el,\n      type: this.type,\n      min: min,\n      max: max,\n      value: value,\n      class: {\n        [\"no-left-pad\"]: !this.showLeftIcon && readonly,\n        [\"readonly\"]: readonly,\n        [\"truncate-value\"]: truncateValue\n      },\n      placeholder: placeholderText,\n      required: required,\n      disabled: disabledMode,\n      readonly: readonly,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      \"aria-label\": label,\n      \"aria-describedby\": describedBy,\n      \"aria-invalid\": invalid,\n      \"aria-activedescendant\": this.ariaActiveDescendant,\n      \"aria-expanded\": this.ariaExpanded,\n      \"aria-owns\": this.ariaOwns,\n      autocomplete: this.autocomplete,\n      autocapitalize: this.autocapitalize,\n      autoFocus: this.autoFocus,\n      spellcheck: spellcheck,\n      inputmode: inputmode,\n      role: this.role\n    }, this.inheritedAttributes)), multiline && h(\"textarea\", Object.assign({\n      id: inputId,\n      class: {\n        [\"no-resize\"]: resize === false || readonly,\n        [\"no-left-pad\"]: !this.showLeftIcon && readonly,\n        [\"readonly\"]: readonly\n      },\n      name: name,\n      ref: el => this.inputEl = el,\n      value: value,\n      rows: rows,\n      required: required,\n      disabled: disabledMode,\n      placeholder: placeholderText,\n      readonly: readonly,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      \"aria-label\": label,\n      \"aria-describedby\": describedBy,\n      \"aria-invalid\": invalid,\n      autocapitalize: this.autocapitalize,\n      autoFocus: this.autoFocus,\n      spellcheck: spellcheck,\n      inputmode: inputmode\n    }, this.inheritedAttributes)), isSlotUsed(this.el, \"clear-button\") && h(\"slot\", {\n      name: \"clear-button\"\n    }), isSlotUsed(this.el, \"search-submit-button\") && h(\"slot\", {\n      name: \"search-submit-button\"\n    })), isSlotUsed(this.el, \"menu\") && h(\"slot\", {\n      name: \"menu\"\n    }), (!isEmptyString(validationStatus) || !isEmptyString(validationText) || maxNumChars > 0 || maxValueExceeded || minValueUnattained) && !validationInlineInternal && h(\"ic-input-validation\", {\n      status: this.hasStatus(currentStatus) === false || currentStatus === IcInformationStatus.Success && validationInline || validationInlineInternal ? \"\" : currentStatus,\n      message: showStatusText ? currentValidationText : \"\",\n      ariaLiveMode: messageAriaLive,\n      for: inputId,\n      fullWidth: fullWidth\n    }, !readonly && maxNumChars > 0 && h(\"div\", {\n      slot: \"validation-message-adornment\"\n    }, h(\"ic-typography\", {\n      variant: \"caption\",\n      class: {\n        [\"maxlengthtext\"]: true,\n        [\"error\"]: maxLengthExceeded,\n        [\"disabled\"]: disabledText\n      }\n    }, h(\"span\", {\n      \"aria-live\": \"polite\",\n      id: \"\".concat(inputId, \"-charcount\"),\n      class: \"charcount\"\n    }, numChars, \"/\", maxNumChars), h(\"span\", {\n      hidden: true,\n      id: hiddenCharCountDescId\n    }, \"Field can contain a maximum of \", maxNumChars, \" characters.\"))))));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"debounce\": [\"debounceChanged\"],\n      \"value\": [\"watchValueHandler\"]\n    };\n  }\n};\nTextField.style = icTextFieldCss;\nexport { TextField as ic_text_field };"],"names":["inputIds","TextField","constructor","hostRef","r","this","icKeydown","c","icInput","icBlur","icFocus","icChange","getValidationText","inheritedAttributes","showLeftIcon","hasLeftIconSlot","onInput","ev","value","target","emit","onBlur","onFocus","isTextArea","rows","getInlineValidationText","validationText","hasStatus","status","disabled","showStatusText","validationInline","validationInlineInternal","handleFormReset","initialValue","inputId","concat","label","undefined","required","readonly","placeholder","fullWidth","hideLabel","helperText","resize","small","min","max","maxLength","validationStatus","autocapitalize","autocomplete","autocorrect","autoFocus","debounce","type","inputmode","name","spellcheck","ariaActiveDescendant","truncateValue","ariaExpanded","ariaOwns","ariaAutocomplete","role","hiddenInput","numChars","maxLengthExceeded","minValueUnattained","maxValueExceeded","debounceChanged","watchValueHandler","newValue","inputEl","length","Number","async","focus","handleKeyDown","event","el","querySelector","connectedCallback","componentWillLoad","componentDidLoad","prop","propName","disconnectedCallback","render","disabledMode","placeholderText","currentStatus","currentValidationText","maxNumChars","messageAriaLive","multiline","hiddenCharCountDescId","describedBy","trim","invalid","disabledText","h","H","class","for","multiLine","slot","Object","assign","id","ref","i","message","ariaLiveMode","variant","hidden","g","watchers","style"],"sourceRoot":""}