{"version":3,"file":"3473-49b7b27bbe624c794332.js","mappings":"iNAGA,MACMA,EAAgB,MACpBC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,UAAW,IAAAC,GAAYF,KAAM,WAAY,GAC9CA,KAAKG,WAAQC,EACbJ,KAAKK,UAAOD,EACZJ,KAAKM,UAAW,EAChBN,KAAKO,WAAY,EACjBP,KAAKQ,UAAW,EAChBR,KAAKS,WAAa,GAClBT,KAAKU,OAAQ,EACbV,KAAKW,iBAAmB,GACxBX,KAAKY,eAAiB,GACtBZ,KAAKa,eAAiB,EACxB,CACAC,gBACEd,KAAKe,gBAAkBC,MAAMC,KAAKjB,KAAKkB,KAAKC,iBAAiB,gBAC7DnB,KAAKe,gBAAgBK,SAAQC,IACvBA,EAASC,UAA4D,IAAjDtB,KAAKa,eAAeU,QAAQF,EAASG,QAC3DxB,KAAKa,eAAeY,KAAKJ,EAASG,MACpC,IAEFxB,KAAKC,SAASyB,KAAK,CACjBF,MAAOxB,KAAKa,gBAEhB,CACAc,mBACE3B,KAAKe,gBAAkBC,MAAMC,KAAKjB,KAAKkB,KAAKC,iBAAiB,gBAC7DnB,KAAKe,gBAAgBK,SAAQC,IACvBA,EAASC,UAA4D,IAAjDtB,KAAKa,eAAeU,QAAQF,EAASG,QAC3DxB,KAAKa,eAAeY,KAAKJ,EAASG,OAE/BH,EAAShB,OAAMgB,EAAShB,KAAOL,KAAKK,MACzCgB,EAASO,WAAa5B,KAAKG,KAAK,KAElC,OAAiC,CAAC,CAChC0B,KAAM7B,KAAKG,MACX2B,SAAU,SACT,CACDD,KAAM7B,KAAKK,KACXyB,SAAU,SACR,iBACN,CACAC,SACE,MAAMC,GAAc,OAAwBhC,KAAKK,KAA0B,KAApBL,KAAKS,WAA6C,KAA1BT,KAAKW,kBAC9EsB,GAAsB,OAAoBjC,KAAKW,iBAAkBX,KAAKQ,UAC5E,OAAO,IAAA0B,GAAE,EAAAC,EAAM,MAAiC,UAA1BnC,KAAKW,kBAAgCX,KAAKM,UAAYN,KAAKO,aAAc,IAAA2B,GAAE,OAAQ,CACvGE,GAAI,uBACJC,MAAO,0BACP,cAAe,QACdrC,KAAKG,MAAO,IAA+B,UAA1BH,KAAKW,iBAA+B,gBAAkB,KAAM,IAAKX,KAAKM,SAAW,WAAa,OAAO,IAAA4B,GAAE,WAAY,CACrIE,GAAIpC,KAAKK,KACT,kBAAmB,GAAGiC,OAAiC,UAA1BtC,KAAKW,kBAAgCX,KAAKM,UAAYN,KAAKO,UAAY,uBAAyB,GAAI,KAAK+B,OAAON,GAAaO,OAC1J/B,SAAUR,KAAKQ,WACbR,KAAKO,YAAa,IAAA2B,GAAE,SAAU,MAAM,IAAAA,GAAE,iBAAkB,CAC1DG,MAAO,CACL,CAAC,GAAGC,OAAOtC,KAAKW,oBAAoB,GAEtCR,MAAOH,KAAKG,MACZM,WAAYT,KAAKS,WACjBH,SAAUN,KAAKM,SACfE,SAAUR,KAAKQ,SACfgC,IAAKxC,KAAKK,SACP,IAAA6B,GAAE,MAAO,CACZG,MAAO,yBACN,IAAAH,GAAE,OAAQ,QAASD,IAAuB,IAAAC,GAAE,sBAAuB,CACpEM,IAAKxC,KAAKK,KACVoC,aAAc,SACdC,OAAQ1C,KAAKW,iBACbgC,QAAS3C,KAAKY,iBAElB,CACIM,WACF,OAAO,IAAA0B,GAAW5C,KACpB,GAEFJ,EAAciD,MA7Ea,87F","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-checkbox-group.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-90721b3c.js';\nimport { a as onComponentRequiredPropUndefined, h as getInputDescribedByText, j as hasValidationStatus } from './helpers-b2b47a7d.js';\nimport './types-dd515332.js';\nconst icCheckboxGroupCss = \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0;}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px;}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}:host{display:block}ic-input-label.error{color:var(--ic-status-error)}ic-input-label ic-typography{margin-bottom:var(--ic-space-sm)}:host([small]) ic-input-label ic-typography{margin-bottom:calc(var(--ic-space-sm) / 2)}ic-input-validation{margin-top:var(--ic-space-sm)}:host([small]) ic-input-validation{margin-top:calc(var(--ic-space-sm) / 2)}.checkboxes-container{margin-bottom:calc(-1 * var(--ic-space-xxs))}:host([small]) .checkboxes-container{margin-bottom:calc(-1 * var(--ic-space-xxxs))}.screen-reader-only-text{position:absolute;left:-9999px;background-color:#fff;color:#000;text-transform:none}\";\nconst CheckboxGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.icChange = createEvent(this, \"icChange\", 7);\n    this.label = undefined;\n    this.name = undefined;\n    this.required = false;\n    this.hideLabel = false;\n    this.disabled = false;\n    this.helperText = \"\";\n    this.small = false;\n    this.validationStatus = \"\";\n    this.validationText = \"\";\n    this.checkedOptions = [];\n  }\n  selectHandler() {\n    this.checkboxOptions = Array.from(this.host.querySelectorAll(\"ic-checkbox\"));\n    this.checkboxOptions.forEach(checkbox => {\n      if (checkbox.checked && this.checkedOptions.indexOf(checkbox.value) === -1) {\n        this.checkedOptions.push(checkbox.value);\n      }\n    });\n    this.icChange.emit({\n      value: this.checkedOptions\n    });\n  }\n  componentDidLoad() {\n    this.checkboxOptions = Array.from(this.host.querySelectorAll(\"ic-checkbox\"));\n    this.checkboxOptions.forEach(checkbox => {\n      if (checkbox.checked && this.checkedOptions.indexOf(checkbox.value) === -1) {\n        this.checkedOptions.push(checkbox.value);\n      }\n      if (!checkbox.name) checkbox.name = this.name;\n      checkbox.groupLabel = this.label;\n    });\n    onComponentRequiredPropUndefined([{\n      prop: this.label,\n      propName: \"label\"\n    }, {\n      prop: this.name,\n      propName: \"name\"\n    }], \"Checkbox Group\");\n  }\n  render() {\n    const describedBy = getInputDescribedByText(this.name, this.helperText !== \"\", this.validationStatus !== \"\");\n    const hadValidationStatus = hasValidationStatus(this.validationStatus, this.disabled);\n    return h(Host, null, (this.validationStatus === \"error\" || this.required || this.hideLabel) && h(\"span\", {\n      id: \"screenReaderOnlyText\",\n      class: \"screen-reader-only-text\",\n      \"aria-hidden\": \"true\"\n    }, this.label, \" \", this.validationStatus === \"error\" ? \"invalid data \" : null, \" \", this.required ? \"required\" : null), h(\"fieldset\", {\n      id: this.name,\n      \"aria-labelledby\": \"\".concat(this.validationStatus === \"error\" || this.required || this.hideLabel ? \"screenReaderOnlyText\" : \"\", \" \").concat(describedBy).trim(),\n      disabled: this.disabled\n    }, !this.hideLabel && h(\"legend\", null, h(\"ic-input-label\", {\n      class: {\n        [\"\".concat(this.validationStatus)]: true\n      },\n      label: this.label,\n      helperText: this.helperText,\n      required: this.required,\n      disabled: this.disabled,\n      for: this.name\n    })), h(\"div\", {\n      class: \"checkboxes-container\"\n    }, h(\"slot\", null))), hadValidationStatus && h(\"ic-input-validation\", {\n      for: this.name,\n      ariaLiveMode: \"polite\",\n      status: this.validationStatus,\n      message: this.validationText\n    }));\n  }\n  get host() {\n    return getElement(this);\n  }\n};\nCheckboxGroup.style = icCheckboxGroupCss;\nexport { CheckboxGroup as ic_checkbox_group };"],"names":["CheckboxGroup","constructor","hostRef","r","this","icChange","c","label","undefined","name","required","hideLabel","disabled","helperText","small","validationStatus","validationText","checkedOptions","selectHandler","checkboxOptions","Array","from","host","querySelectorAll","forEach","checkbox","checked","indexOf","value","push","emit","componentDidLoad","groupLabel","prop","propName","render","describedBy","hadValidationStatus","h","H","id","class","concat","trim","for","ariaLiveMode","status","message","g","style"],"sourceRoot":""}