{"version":3,"file":"1437-cf7684fd4a347a2a4b55.js","mappings":"yPAGA,MACMA,EAAa,MACjBC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,SAAMC,EACXF,KAAKG,UAAW,EAChBH,KAAKI,WAAa,GAClBJ,KAAKK,WAAQH,EACbF,KAAKM,UAAW,EAChBN,KAAKO,UAAW,EAChBP,KAAKQ,OAAQ,EACbR,KAAKS,MAAO,CACd,CACAC,oBACE,OAAiC,CAAC,CAChCC,KAAMX,KAAKK,MACXO,SAAU,UACR,cACN,CACAC,SACE,MAAM,SACJP,EAAQ,SACRC,EAAQ,MACRF,EAAK,SACLF,EAAQ,WACRC,EAAU,MACVI,EAAK,KACLC,GACET,KACEc,EAAYX,EAAWE,EAAQ,KAAOA,EACtCU,EAAeR,EAAW,GAAGS,OAAOF,IAAa,IAAAG,GAAE,QAAS,CAChEC,QAASlB,KAAKC,KACba,GACGK,GAAK,OAAqBnB,KAAKC,KACrC,OAAO,IAAAgB,GAAE,EAAAG,EAAM,CACbC,MAAO,CACL,SAAcf,EACd,SAAcC,EACd,cAAgC,KAAfH,KAElB,IAAAa,GAAE,gBAAiB,CACpBK,QAAS,QACTD,MAAO,CACL,iBAAoBd,EACpB,cAAiBC,KAAWD,GAAYD,GACxC,KAAUG,IAEXM,GAA8B,KAAfX,IAAqB,IAAAa,GAAE,gBAAiB,CACxDK,QAAS,UACTD,MAAO,CACL,YAAgB,EAChB,qBAAwBf,IAAaC,EACrC,sBAAyBA,KAE1B,IAAAU,GAAE,OAAQ,CACXE,GAAIA,GACHf,IACL,GAEFR,EAAW2B,MA3Da,ymBA4DxB,MACMC,EAAO,CACX,CAAC,aAA8B,IAC/B,CAAC,WAA4B,IAC7B,CAAC,aAA8B,KAE3BC,EAAkB,MACtB5B,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAK0B,aAAUxB,EACfF,KAAKC,SAAMC,EACXF,KAAK2B,OAAS,GACd3B,KAAK4B,WAAY,EACjB5B,KAAK6B,aAAe,QACtB,CACAnB,oBACE,OAAiC,CAAC,CAChCC,KAAMX,KAAK0B,QACXd,SAAU,YACR,mBACN,CACAC,SACE,MAAMiB,EAA8B,KAAhB9B,KAAK2B,OAAgBH,EAAKxB,KAAK2B,QAAU,GACvDR,GAAK,OAAyBnB,KAAKC,KACzC,OAAO,IAAAgB,GAAE,EAAAG,EAAM,CACbC,MAAO,CACL,CAACrB,KAAK2B,QAAyB,KAAhB3B,KAAK2B,OACpB,UAAe3B,KAAK4B,YAEL,KAAhBE,IAAsB,IAAAb,GAAE,OAAQ,CACjCI,MAAO,CACL,eAAiB,EACjB,CAAC,QAAQL,OAAOhB,KAAK2B,UAAU,GAEjCI,UAAWD,KACT,IAAAb,GAAE,gBAAiB,CACrBK,QAAS,UACTD,MAAO,eACN,IAAAJ,GAAE,OAAQ,CACX,YAAajB,KAAK6B,aAClBV,GAAIA,GACHnB,KAAK0B,WAAW,IAAAT,GAAE,OAAQ,CAC3Be,KAAM,iCAEV,CACIC,SACF,OAAO,IAAAC,GAAWlC,KACpB,GAEFyB,EAAgBF,MAjDa,6oB","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-input-label_2.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-90721b3c.js';\nimport { a as onComponentRequiredPropUndefined, N as getInputHelperTextID, O as getInputValidationTextID, P as warningIcon, Q as errorIcon, L as successIcon } from './helpers-b2b47a7d.js';\nimport { a as IcInformationStatus } from './types-dd515332.js';\nconst icInputLabelCss = \"ic-input-label{margin-bottom:var(--ic-space-xs)}ic-input-label.with-helper{margin-bottom:var(--ic-space-xxxs)}ic-input-label.disabled{color:var(--ic-color-tertiary-text)}ic-input-label.readonly{color:var(--ic-color-tertiary-text)}ic-input-label .helpertext{margin-top:var(--ic-space-xxxs)}ic-input-label .helpertext-normal{color:var(--ic-color-secondary-text)}ic-input-label .helpertext-readonly{color:var(--ic-color-tertiary-text)}ic-input-label .readonly-label{color:var(--ic-color-secondary-text)}ic-input-label .error-label{color:var(--ic-status-error)}ic-input-label .dark{color:var(--ic-architectural-white)}\";\nconst InputLabel = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.for = undefined;\n    this.required = false;\n    this.helperText = \"\";\n    this.label = undefined;\n    this.disabled = false;\n    this.readonly = false;\n    this.error = false;\n    this.dark = false;\n  }\n  componentDidLoad() {\n    onComponentRequiredPropUndefined([{\n      prop: this.label,\n      propName: \"label\"\n    }], \"Input Label\");\n  }\n  render() {\n    const {\n      disabled,\n      readonly,\n      label,\n      required,\n      helperText,\n      error,\n      dark\n    } = this;\n    const labelText = required ? label + \" *\" : label;\n    const labelContent = readonly ? \"\".concat(labelText) : h(\"label\", {\n      htmlFor: this.for\n    }, labelText);\n    const id = getInputHelperTextID(this.for);\n    return h(Host, {\n      class: {\n        [\"disabled\"]: disabled,\n        [\"readonly\"]: readonly,\n        [\"with-helper\"]: helperText !== \"\"\n      }\n    }, h(\"ic-typography\", {\n      variant: \"label\",\n      class: {\n        [\"readonly-label\"]: readonly,\n        [\"error-label\"]: error && !(readonly || disabled),\n        [\"dark\"]: dark\n      }\n    }, labelContent), helperText !== \"\" && h(\"ic-typography\", {\n      variant: \"caption\",\n      class: {\n        [\"helpertext\"]: true,\n        [\"helpertext-normal\"]: !disabled && !readonly,\n        [\"helpertext-readonly\"]: readonly\n      }\n    }, h(\"span\", {\n      id: id\n    }, helperText)));\n  }\n};\nInputLabel.style = icInputLabelCss;\nconst icInputValidationCss = \"ic-input-validation{width:var(--input-width, 20rem);margin-top:var(--ic-space-xs);display:flex}ic-input-validation.fullwidth{width:100%}ic-input-validation.error{color:var(--ic-status-error)}ic-input-validation.success{color:var(--ic-status-success)}ic-input-validation span.status-icon{padding-right:var(--ic-space-xxs)}ic-input-validation span.status-icon>svg{height:1.25rem;width:1.25rem}ic-input-validation span.icon-success>svg{fill:var(--ic-status-success)}ic-input-validation span.icon-error>svg{fill:var(--ic-status-error)}ic-input-validation span.icon-warning>svg{fill:var(--ic-status-warning-mid)}ic-input-validation .statustext{flex-grow:1}\";\nconst icon = {\n  [IcInformationStatus.Warning]: warningIcon,\n  [IcInformationStatus.Error]: errorIcon,\n  [IcInformationStatus.Success]: successIcon\n};\nconst InputValidation = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.message = undefined;\n    this.for = undefined;\n    this.status = \"\";\n    this.fullWidth = false;\n    this.ariaLiveMode = \"polite\";\n  }\n  componentDidLoad() {\n    onComponentRequiredPropUndefined([{\n      prop: this.message,\n      propName: \"message\"\n    }], \"Input Validation\");\n  }\n  render() {\n    const displayIcon = this.status !== \"\" ? icon[this.status] : \"\";\n    const id = getInputValidationTextID(this.for);\n    return h(Host, {\n      class: {\n        [this.status]: this.status !== \"\",\n        [\"fullwidth\"]: this.fullWidth\n      }\n    }, displayIcon !== \"\" && h(\"span\", {\n      class: {\n        [\"status-icon\"]: true,\n        [\"icon-\".concat(this.status)]: true\n      },\n      innerHTML: displayIcon\n    }), h(\"ic-typography\", {\n      variant: \"caption\",\n      class: \"statustext\"\n    }, h(\"span\", {\n      \"aria-live\": this.ariaLiveMode,\n      id: id\n    }, this.message)), h(\"slot\", {\n      name: \"validation-message-adornment\"\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nInputValidation.style = icInputValidationCss;\nexport { InputLabel as ic_input_label, InputValidation as ic_input_validation };"],"names":["InputLabel","constructor","hostRef","r","this","for","undefined","required","helperText","label","disabled","readonly","error","dark","componentDidLoad","prop","propName","render","labelText","labelContent","concat","h","htmlFor","id","H","class","variant","style","icon","InputValidation","message","status","fullWidth","ariaLiveMode","displayIcon","innerHTML","name","el","g"],"sourceRoot":""}