{"version":3,"file":"2594-f953586284b916f52120.js","mappings":"wMAGA,MAAMA,EAAQ,MACZC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,aAAc,IAAAC,GAAYF,KAAM,cAAe,GACpDA,KAAKG,wBAA0B,MACzB,SAA4B,MAA8B,SAA4B,EAAAC,GACxFC,QAAQC,KAAK,4TACf,EAEFN,KAAKO,cAAgB,KACnB,GAAmB,OAAfP,KAAKQ,MAAgB,CACvB,IAAIC,EAAY,KAChB,MAAMC,EAAYV,KAAKQ,MAAMG,MAAM,EAAG,GACpB,MAAdD,EACFD,GAAY,OAAUT,KAAKQ,OACU,MAA5BE,EAAUE,gBACnBH,GAAY,OAAaT,KAAKQ,QAEhCR,KAAKa,aAAaJ,EACpB,GAEFT,KAAKa,aAAeJ,IAClB,GAAkB,OAAdA,EAAoB,CACtB,MAAMK,EAAOC,SAASC,gBACtBF,EAAKG,MAAMC,YAAY,uBAAwBT,EAAUV,EAAEoB,YAC3DL,EAAKG,MAAMC,YAAY,uBAAwBT,EAAUW,EAAED,YAC3DL,EAAKG,MAAMC,YAAY,uBAAwBT,EAAUY,EAAEF,YAC3DL,EAAKG,MAAMC,YAAY,uBAAwBT,EAAUa,EAAEH,YAC3DnB,KAAKG,0BACL,MAAMoB,GAAkB,SACxBvB,KAAKC,YAAYuB,KAAK,CACpBC,KAAMF,EACNf,MAAOC,GAEX,GAEFT,KAAKQ,MAAQ,IACf,CACAkB,wBACE1B,KAAKO,eACP,CACAoB,oBACE3B,KAAKO,eACP,CACAqB,SACE,OAAO,IAAAC,GAAE,EAAAC,EAAM,KACjB,CACWC,sBACT,MAAO,CACL,MAAS,CAAC,yBAEd,E","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-theme.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-3b144b17.js';\nimport { B as getThemeColorBrightness, C as BLACK_MIN_COLOR_BRIGHTNESS, W as WHITE_MAX_COLOR_BRIGHTNESS, E as hexToRgba, F as rgbaStrToObj, k as getThemeForegroundColor } from './helpers-73666f14.js';\nimport './types-dd515332.js';\nconst Theme = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.themeChange = createEvent(this, \"themeChange\", 7);\n    this.checkThemeColorContrast = () => {\n      if (getThemeColorBrightness() < BLACK_MIN_COLOR_BRIGHTNESS && getThemeColorBrightness() > WHITE_MAX_COLOR_BRIGHTNESS) {\n        console.warn(\"The theme colour does not provide enough contrast with either of the ICDS black or white foreground colours. Consider choosing a colour with a different brightness to achieve sufficient colour contrast for good visibility. See https://www.w3.org/TR/AERT/#color-contrast for more information about colour contrast.\");\n      }\n    };\n    this.setThemeColor = () => {\n      if (this.color !== null) {\n        let colorRGBA = null;\n        const firstChar = this.color.slice(0, 1);\n        if (firstChar === \"#\") {\n          colorRGBA = hexToRgba(this.color);\n        } else if (firstChar.toLowerCase() === \"r\") {\n          colorRGBA = rgbaStrToObj(this.color);\n        }\n        this.setThemeRGBA(colorRGBA);\n      }\n    };\n    this.setThemeRGBA = colorRGBA => {\n      if (colorRGBA !== null) {\n        const root = document.documentElement;\n        root.style.setProperty(\"--ic-theme-primary-r\", colorRGBA.r.toString());\n        root.style.setProperty(\"--ic-theme-primary-g\", colorRGBA.g.toString());\n        root.style.setProperty(\"--ic-theme-primary-b\", colorRGBA.b.toString());\n        root.style.setProperty(\"--ic-theme-primary-a\", colorRGBA.a.toString());\n        this.checkThemeColorContrast();\n        const foregroundColor = getThemeForegroundColor();\n        this.themeChange.emit({\n          mode: foregroundColor,\n          color: colorRGBA\n        });\n      }\n    };\n    this.color = null;\n  }\n  watchColorPropHandler() {\n    this.setThemeColor();\n  }\n  componentWillLoad() {\n    this.setThemeColor();\n  }\n  render() {\n    return h(Host, null);\n  }\n  static get watchers() {\n    return {\n      \"color\": [\"watchColorPropHandler\"]\n    };\n  }\n};\nexport { Theme as ic_theme };"],"names":["Theme","constructor","hostRef","r","this","themeChange","c","checkThemeColorContrast","W","console","warn","setThemeColor","color","colorRGBA","firstChar","slice","toLowerCase","setThemeRGBA","root","document","documentElement","style","setProperty","toString","g","b","a","foregroundColor","emit","mode","watchColorPropHandler","componentWillLoad","render","h","H","watchers"],"sourceRoot":""}