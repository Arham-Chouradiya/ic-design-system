"use strict";(self.webpackChunkic_design_system=self.webpackChunkic_design_system||[]).push([[9924],{9924:function(s,i,t){t.r(i),t.d(i,{ic_toast_region:function(){return o}});var e=t(2815);const o=class{constructor(s){(0,e.r)(this,s),this.pendingVisibility=[],this.showToast=s=>{const i=Array.from(document.querySelectorAll("ic-toast")).filter((s=>"none"!==window.getComputedStyle(s).display));-1===i.indexOf(s)&&i.length<=0&&s.setVisible().then((s=>this.previouslyFocused=s)),i.length>0&&this.pendingVisibility.push(s)},this.openToast=void 0}watchOpenToastHandler(s){void 0!==this.openToast&&(this.showToast(s),this.openToast=void 0)}handleDismissedToast(){var s;this.pendingVisibility.length>0?(this.pendingVisibility[0].setVisible().then((s=>this.previouslyFocused=s)),this.pendingVisibility.shift()):this.previouslyFocused&&"setFocus"in this.previouslyFocused?this.previouslyFocused.setFocus():null===(s=this.previouslyFocused)||void 0===s||s.focus()}async setVisible(s){this.showToast(s)}render(){return(0,e.h)("slot",null)}get el(){return(0,e.g)(this)}static get watchers(){return{openToast:["watchOpenToastHandler"]}}}}}]);