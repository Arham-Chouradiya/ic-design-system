{"version":3,"file":"758-7d97fc6dee4d484a9c7b.js","mappings":"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","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-text-field.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-90721b3c.js';\nimport { a as IcInformationStatus } from './types-dd515332.js';\nimport { J as debounceEvent, m as inheritAttributes, d as addFormResetListener, a as onComponentRequiredPropUndefined, r as removeFormResetListener, h as getInputDescribedByText, e as renderHiddenInput, i as isSlotUsed, K as isEmptyString, n as IC_INHERITED_ARIA } from './helpers-b2b47a7d.js';\nconst icTextFieldCss = \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0;}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px;}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}:host{display:block}:host([full-width]),.fullwidth{width:100%}::-moz-placeholder{color:var(--ic-color-tertiary-text);opacity:1}::placeholder{color:var(--ic-color-tertiary-text);opacity:1}input,textarea{border:0;border-radius:var(--ic-border-radius);background-color:var(--ic-architectural-white);line-height:1.5rem;letter-spacing:0.005rem;width:100%;padding-right:var(--ic-space-xs);padding-left:var(--ic-space-xs)}textarea{min-height:var(--ic-space-lg);resize:vertical;padding-top:0.375rem}input:focus,textarea:focus{border:0;outline:0}input:disabled,textarea:disabled{color:var(--ic-architectural-200)}input.readonly,textarea.readonly{color:var(--ic-color-primary-text)}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=\\\"number\\\"]{-moz-appearance:textfield}textarea.no-resize{resize:none}.maxlengthtext{color:var(--ic-color-secondary-text)}.exceeded{color:var(--ic-status-error)}.disabled{color:var(--ic-architectural-200)}.no-left-pad{padding-left:0}::slotted([slot=\\\"icon\\\"]){fill:var(--ic-color-tertiary-text)}.has-value ::slotted([slot=\\\"icon\\\"]){fill:var(--ic-color-primary-text)}.charcount{margin-right:calc(-1 * var(--ic-space-xxxs))}input[type=\\\"search\\\"]::-webkit-search-cancel-button,input[type=\\\"search\\\"]::-webkit-search-decoration,input[type=\\\"search\\\"]::-webkit-search-results-button,input[type=\\\"search\\\"]::-webkit-search-results-decoration{display:none}input[type=\\\"search\\\"].truncate-value{width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}@media (forced-colors: active){input.readonly,textarea.readonly{color:canvastext}.has-value ::slotted([slot=\\\"icon\\\"]){fill:currentcolor}}\";\nlet inputIds = 0;\nconst TextField = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.icKeydown = createEvent(this, \"icKeydown\", 7);\n    this.icInput = createEvent(this, \"icInput\", 7);\n    this.icBlur = createEvent(this, \"icBlur\", 7);\n    this.icFocus = createEvent(this, \"icFocus\", 7);\n    this.icChange = createEvent(this, \"icChange\", 7);\n    this.inheritedAttributes = {};\n    this.showLeftIcon = this.hasLeftIconSlot();\n    this.onInput = ev => {\n      this.value = ev.target.value;\n      this.icInput.emit({\n        value: this.value\n      });\n    };\n    this.onBlur = ev => {\n      const value = ev.target.value;\n      this.icBlur.emit({\n        value: value\n      });\n    };\n    this.onFocus = ev => {\n      const value = ev.target.value;\n      this.icFocus.emit({\n        value: value\n      });\n    };\n    this.isTextArea = () => {\n      return this.rows > 1;\n    };\n    this.hasStatus = status => {\n      return status !== \"\" && !this.disabled;\n    };\n    this.showStatusText = status => {\n      if (this.hasStatus(status) && !(status == IcInformationStatus.Success && this.validationInline)) {\n        return true;\n      }\n      return false;\n    };\n    this.handleFormReset = () => {\n      this.value = this.initialValue;\n    };\n    this.inputId = \"ic-text-field-input-\".concat(inputIds++);\n    this.label = undefined;\n    this.required = false;\n    this.disabled = false;\n    this.readonly = false;\n    this.placeholder = \"\";\n    this.fullWidth = false;\n    this.hideLabel = false;\n    this.helperText = \"\";\n    this.rows = 1;\n    this.resize = false;\n    this.small = false;\n    this.value = \"\";\n    this.maxLength = 0;\n    this.validationStatus = \"\";\n    this.validationText = \"\";\n    this.validationInline = false;\n    this.autocapitalize = \"off\";\n    this.autocomplete = \"off\";\n    this.autocorrect = \"off\";\n    this.autoFocus = false;\n    this.debounce = 0;\n    this.type = \"text\";\n    this.inputmode = \"text\";\n    this.name = this.inputId;\n    this.spellcheck = false;\n    this.ariaActiveDescendant = undefined;\n    this.truncateValue = undefined;\n    this.ariaExpanded = undefined;\n    this.ariaOwns = undefined;\n    this.ariaAutocomplete = undefined;\n    this.role = undefined;\n    this.hiddenInput = true;\n    this.numChars = 0;\n    this.maxLengthExceeded = false;\n    this.initialValue = this.value;\n  }\n  debounceChanged() {\n    this.icChange = debounceEvent(this.icChange, this.debounce);\n  }\n  watchValueHandler(newValue) {\n    if (this.inputEl && this.inputEl.value !== newValue) {\n      this.inputEl.value = newValue;\n    }\n    if (this.maxLength > 0) {\n      this.numChars = newValue.length;\n      if (newValue.length > this.maxLength) {\n        this.maxLengthExceeded = true;\n      } else {\n        this.maxLengthExceeded = false;\n      }\n    }\n    this.icChange.emit({\n      value: newValue\n    });\n  }\n  /**\n   * Sets focus on the native `input`.\n   */\n  async setFocus() {\n    if (this.inputEl) {\n      this.inputEl.focus();\n    }\n  }\n  //stop keydown event bubbling up to storybook\n  handleKeyDown(ev) {\n    this.icKeydown.emit({\n      event: ev\n    });\n    ev.cancelBubble = true;\n  }\n  hasLeftIconSlot() {\n    const iconEl = this.el.querySelector(\"[slot=\\\"icon\\\"]\");\n    if (iconEl != null) {\n      return true;\n    }\n    return false;\n  }\n  connectedCallback() {\n    this.debounceChanged();\n  }\n  componentWillLoad() {\n    this.watchValueHandler(this.value);\n    this.inheritedAttributes = inheritAttributes(this.el, [...IC_INHERITED_ARIA, \"title\", \"aria-autocomplete\", \"aria-haspopup\"]);\n    if (this.readonly) {\n      this.maxLengthExceeded = false;\n    }\n    addFormResetListener(this.el, this.handleFormReset);\n  }\n  componentDidLoad() {\n    onComponentRequiredPropUndefined([{\n      prop: this.label,\n      propName: \"label\"\n    }], \"Text Field\");\n  }\n  disconnectedCallback() {\n    removeFormResetListener(this.el, this.handleFormReset);\n  }\n  render() {\n    const {\n      inputId,\n      name,\n      label,\n      required,\n      small,\n      placeholder,\n      helperText,\n      rows,\n      resize,\n      disabled,\n      value,\n      maxLength,\n      numChars,\n      readonly,\n      maxLengthExceeded,\n      validationStatus,\n      validationText,\n      validationInline,\n      spellcheck,\n      inputmode,\n      fullWidth,\n      truncateValue,\n      hiddenInput\n    } = this;\n    const disabledMode = readonly ? true : disabled;\n    const placeholderText = disabled ? \"\" : placeholder;\n    const currentStatus = maxLengthExceeded ? IcInformationStatus.Error : validationStatus;\n    const currentValidationText = maxLengthExceeded ? \"Maximum length exceeded\" : validationText;\n    const maxNumChars = readonly ? 0 : maxLength;\n    const messageAriaLive = maxLengthExceeded || maxLength === 0 && currentStatus === IcInformationStatus.Error ? \"assertive\" : \"polite\";\n    const showStatusText = this.showStatusText(currentStatus);\n    const multiline = this.isTextArea();\n    const hiddenCharCountDescId = maxLength > 0 ? inputId + \"-charcount-desc\" : \"\";\n    const describedBy = (hiddenCharCountDescId + \" \" + getInputDescribedByText(inputId, helperText !== \"\", showStatusText)).trim();\n    if (this.showLeftIcon) {\n      if (!readonly && disabledMode) {\n        this.showLeftIcon = false;\n      }\n    }\n    const invalid = currentStatus === IcInformationStatus.Error ? \"true\" : \"false\";\n    const disabledText = disabledMode && !readonly;\n    if (hiddenInput) {\n      renderHiddenInput(true, this.el, name, value, disabledMode);\n    }\n    return h(Host, {\n      class: {\n        [\"fullwidth\"]: fullWidth\n      }\n    }, h(\"ic-input-container\", {\n      readonly: readonly,\n      disabled: disabledMode\n    }, !this.hideLabel && h(\"ic-input-label\", {\n      for: inputId,\n      label: label,\n      helperText: helperText,\n      required: required,\n      disabled: disabledText,\n      readonly: readonly\n    }), h(\"ic-input-component-container\", {\n      small: small,\n      validationStatus: currentStatus,\n      multiLine: multiline,\n      disabled: disabledMode,\n      readonly: readonly,\n      validationInline: validationInline,\n      fullWidth: fullWidth\n    }, this.showLeftIcon && h(\"span\", {\n      class: {\n        [\"readonly\"]: readonly,\n        [\"has-value\"]: value.length > 0\n      },\n      slot: \"left-icon\"\n    }, h(\"slot\", {\n      name: \"icon\"\n    })), !multiline && h(\"input\", Object.assign({\n      id: inputId,\n      name: name,\n      ref: el => this.inputEl = el,\n      type: this.type,\n      value: value,\n      class: {\n        [\"no-left-pad\"]: !this.showLeftIcon && readonly,\n        [\"readonly\"]: readonly,\n        [\"truncate-value\"]: truncateValue\n      },\n      placeholder: placeholderText,\n      required: required,\n      disabled: disabledMode,\n      readonly: readonly,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      \"aria-label\": label,\n      \"aria-describedby\": describedBy,\n      \"aria-invalid\": invalid,\n      \"aria-activedescendant\": this.ariaActiveDescendant,\n      \"aria-expanded\": this.ariaExpanded,\n      \"aria-owns\": this.ariaOwns,\n      autocomplete: this.autocomplete,\n      autocapitalize: this.autocapitalize,\n      autoFocus: this.autoFocus,\n      spellcheck: spellcheck,\n      inputmode: inputmode,\n      role: this.role\n    }, this.inheritedAttributes)), multiline && h(\"textarea\", Object.assign({\n      id: inputId,\n      class: {\n        [\"no-resize\"]: resize === false || readonly,\n        [\"no-left-pad\"]: !this.showLeftIcon && readonly,\n        [\"readonly\"]: readonly\n      },\n      name: name,\n      ref: el => this.inputEl = el,\n      value: value,\n      rows: rows,\n      required: required,\n      disabled: disabledMode,\n      placeholder: placeholderText,\n      readonly: readonly,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      \"aria-label\": label,\n      \"aria-describedby\": describedBy,\n      \"aria-invalid\": invalid,\n      autocapitalize: this.autocapitalize,\n      autoFocus: this.autoFocus,\n      spellcheck: spellcheck,\n      inputmode: inputmode\n    }, this.inheritedAttributes)), isSlotUsed(this.el, \"clear-button\") && h(\"slot\", {\n      name: \"clear-button\"\n    }), isSlotUsed(this.el, \"search-submit-button\") && h(\"slot\", {\n      name: \"search-submit-button\"\n    })), isSlotUsed(this.el, \"menu\") && h(\"slot\", {\n      name: \"menu\"\n    }), (!isEmptyString(validationStatus) || !isEmptyString(validationText) || maxNumChars > 0) && h(\"ic-input-validation\", {\n      status: this.hasStatus(currentStatus) === false || currentStatus === IcInformationStatus.Success && validationInline ? \"\" : currentStatus,\n      message: showStatusText ? currentValidationText : \"\",\n      ariaLiveMode: messageAriaLive,\n      for: inputId,\n      fullWidth: fullWidth\n    }, !readonly && maxNumChars > 0 && h(\"div\", {\n      slot: \"validation-message-adornment\"\n    }, h(\"ic-typography\", {\n      variant: \"caption\",\n      class: {\n        [\"maxlengthtext\"]: true,\n        [\"exceeded\"]: maxLengthExceeded,\n        [\"disabled\"]: disabledText\n      }\n    }, h(\"span\", {\n      \"aria-live\": \"polite\",\n      id: \"\".concat(inputId, \"-charcount\"),\n      class: \"charcount\"\n    }, numChars, \"/\", maxNumChars), h(\"span\", {\n      hidden: true,\n      id: hiddenCharCountDescId\n    }, \"Field can contain a maximum of \", maxNumChars, \" characters.\"))))));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"debounce\": [\"debounceChanged\"],\n      \"value\": [\"watchValueHandler\"]\n    };\n  }\n};\nTextField.style = icTextFieldCss;\nexport { TextField as ic_text_field };"],"names":["inputIds","TextField","constructor","hostRef","r","this","icKeydown","c","icInput","icBlur","icFocus","icChange","inheritedAttributes","showLeftIcon","hasLeftIconSlot","onInput","ev","value","target","emit","onBlur","onFocus","isTextArea","rows","hasStatus","status","disabled","showStatusText","validationInline","handleFormReset","initialValue","inputId","concat","label","undefined","required","readonly","placeholder","fullWidth","hideLabel","helperText","resize","small","maxLength","validationStatus","validationText","autocapitalize","autocomplete","autocorrect","autoFocus","debounce","type","inputmode","name","spellcheck","ariaActiveDescendant","truncateValue","ariaExpanded","ariaOwns","ariaAutocomplete","role","hiddenInput","numChars","maxLengthExceeded","debounceChanged","watchValueHandler","newValue","inputEl","length","async","focus","handleKeyDown","event","cancelBubble","el","querySelector","connectedCallback","componentWillLoad","componentDidLoad","prop","propName","disconnectedCallback","render","disabledMode","placeholderText","currentStatus","currentValidationText","maxNumChars","messageAriaLive","multiline","hiddenCharCountDescId","describedBy","trim","invalid","disabledText","h","H","class","for","multiLine","slot","Object","assign","id","ref","i","message","ariaLiveMode","variant","hidden","g","watchers","style"],"sourceRoot":""}