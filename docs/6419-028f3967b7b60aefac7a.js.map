{"version":3,"file":"6419-028f3967b7b60aefac7a.js","mappings":"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","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/ic-tab-context.entry.js"],"sourcesContent":["import _classCallCheck from \"/home/runner/work/ic-design-system/ic-design-system/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/runner/work/ic-design-system/ic-design-system/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-1500de1f.js';\nvar TabContext = /*#__PURE__*/function () {\n  function TabContext(hostRef) {\n    var _this = this;\n    _classCallCheck(this, TabContext);\n    registerInstance(this, hostRef);\n    this.tabSelect = createEvent(this, \"tabSelect\", 7);\n    // Sets attributes to link tabs and tabpanels\n    this.linkTabs = function () {\n      _this.tabs.forEach(function (tab, index) {\n        var tabId = \"ic-tab-\".concat(index, \"-context-\").concat(_this.contextId);\n        var tabPanelId = \"ic-tab-panel-\".concat(index, \"-context-\").concat(_this.contextId);\n        var shared = \"ic-tab--\".concat(index, \"-context-\").concat(_this.contextId);\n        tab.setAttribute(\"id\", tabId);\n        tab.tabId = shared;\n        tab.tabPosition = index;\n        tab.setAttribute(\"aria-controls\", tabPanelId);\n        tab.setAttribute(\"context-id\", _this.contextId);\n        _this.tabPanels[index].setAttribute(\"id\", tabPanelId);\n        _this.tabPanels[index].panelId = shared;\n        _this.tabPanels[index].tabPosition = index;\n        _this.tabPanels[index].setAttribute(\"aria-labelledby\", tabId);\n        if (_this.dark) {\n          tab.dark = true;\n        }\n      });\n      if (_this.dark) {\n        _this.tabList.dark = true;\n      }\n    };\n    // Gets tabs and tabpanels with the same context ID\n    this.getChildren = function () {\n      _this.tabList = Array.from(_this.host.querySelectorAll(\"ic-tab-list\")).find(function (tabList) {\n        return tabList.contextId === _this.contextId;\n      });\n      _this.tabs = Array.from(_this.tabList.querySelectorAll(\"ic-tab\")).filter(function (tab) {\n        return tab.contextId === _this.contextId;\n      });\n      _this.enabledTabs = _this.getEnabledTabs();\n      _this.tabPanels = Array.from(_this.host.querySelectorAll(\"ic-tab-panel\"));\n    };\n    // Determines how keyboard navigation is to be handled based on the activation type\n    this.attatchEventListeners = function () {\n      if (_this.activationType === \"automatic\") {\n        _this.tabList.addEventListener(\"keydown\", function (event) {\n          _this.handleKeyBoardNavAutomatic(event);\n        });\n      } else {\n        _this.tabList.addEventListener(\"keydown\", function (event) {\n          _this.handleKeyBoardNavManual(event);\n        });\n      }\n    };\n    // Determines whether the selected tab is being controlled within the component\n    // or by the user (via selectedTabIndex and onTabSelect)\n    this.setControlledMode = function () {\n      if (_this.selectedTabIndex !== undefined) {\n        _this.controlledMode = true;\n        _this.selectedTab = _this.selectedTabIndex;\n      }\n    };\n    // Sets the tab that is selected on initial render\n    this.setInitialTab = function () {\n      if (_this.controlledMode) {\n        _this.selectedTab = _this.selectedTabIndex;\n        _this.focusedTabIndex = _this.selectedTabIndex;\n      } else {\n        var firstEnabledTabIndex = _this.tabs.findIndex(function (tab) {\n          return tab.tabId === _this.enabledTabs[0].tabId;\n        });\n        _this.selectedTab = firstEnabledTabIndex;\n        _this.focusedTabIndex = firstEnabledTabIndex;\n      }\n    };\n    // Passes the selected tab to the tab and tab panel components\n    this.configureTabs = function () {\n      _this.enabledTabs.forEach(function (tab) {\n        tab.selected = tab.tabPosition === _this.selectedTab;\n      });\n      _this.tabPanels.forEach(function (tabPanel) {\n        tabPanel.selectedTab = _this.tabs[_this.selectedTab].tabId;\n      });\n    };\n    this.getEnabledTabs = function () {\n      return Array.from(_this.tabs).filter(function (child) {\n        return !child.disabled;\n      });\n    };\n    this.getIndexOfEnabledTab = function (allTabsIndex) {\n      return _this.enabledTabs.findIndex(function (tab) {\n        return tab.tabId === _this.tabs[allTabsIndex].tabId;\n      });\n    };\n    // Sets focus on tab and selects it\n    this.keyboardSelectTab = function (enabledTabIndex) {\n      var newIndex = _this.tabs.findIndex(function (tab) {\n        return tab.tabId === _this.enabledTabs[enabledTabIndex].tabId;\n      });\n      _this.enabledTabs[enabledTabIndex].focus();\n      if (!_this.controlledMode) {\n        _this.selectedTab = newIndex;\n      } else {\n        _this.tabSelect.emit({\n          tabIndex: newIndex\n        });\n      }\n    };\n    // Sets focus on tab without selecting it (for manual activation)\n    this.keyboardFocusTab = function (enabledTabIndex) {\n      var newIndex = _this.tabs.findIndex(function (tab) {\n        return tab.tabId === _this.enabledTabs[enabledTabIndex].tabId;\n      });\n      _this.enabledTabs[enabledTabIndex].focus();\n      _this.focusedTabIndex = newIndex;\n    };\n    this.handleKeyBoardNavAutomatic = function (event) {\n      var key = event.key;\n      var enabledTabIndex = _this.getIndexOfEnabledTab(_this.selectedTab);\n      var preventDefault = true;\n      switch (key) {\n        case \"Home\":\n          _this.keyboardSelectTab(0);\n          break;\n        case \"End\":\n          _this.keyboardSelectTab(_this.enabledTabs.length - 1);\n          break;\n        case \"ArrowRight\":\n          if (enabledTabIndex < _this.enabledTabs.length - 1) {\n            _this.keyboardSelectTab(enabledTabIndex + 1);\n          } else {\n            _this.keyboardSelectTab(0);\n          }\n          break;\n        case \"ArrowLeft\":\n          if (enabledTabIndex > 0) {\n            _this.keyboardSelectTab(enabledTabIndex - 1);\n          } else {\n            _this.keyboardSelectTab(_this.enabledTabs.length - 1);\n          }\n          break;\n        default:\n          preventDefault = false;\n      }\n      if (preventDefault) event.preventDefault();\n    };\n    this.handleKeyBoardNavManual = function (event) {\n      var key = event.key;\n      var enabledTabIndex = _this.getIndexOfEnabledTab(_this.focusedTabIndex);\n      var preventDefault = true;\n      switch (key) {\n        case \"Home\":\n          _this.keyboardFocusTab(0);\n          break;\n        case \"End\":\n          _this.keyboardFocusTab(_this.enabledTabs.length - 1);\n          break;\n        case \"ArrowRight\":\n          if (enabledTabIndex < _this.enabledTabs.length - 1) {\n            _this.keyboardFocusTab(enabledTabIndex + 1);\n          } else {\n            _this.keyboardFocusTab(0);\n          }\n          break;\n        case \"ArrowLeft\":\n          if (enabledTabIndex > 0) {\n            _this.keyboardFocusTab(enabledTabIndex - 1);\n          } else {\n            _this.keyboardFocusTab(_this.enabledTabs.length - 1);\n          }\n          break;\n        case \"Enter\":\n          _this.keyboardSelectTab(_this.focusedTabIndex);\n          break;\n        case \" \":\n          _this.keyboardSelectTab(_this.focusedTabIndex);\n          break;\n        default:\n          preventDefault = false;\n      }\n      if (preventDefault) event.preventDefault();\n    };\n    this.contextId = \"default\";\n    this.activationType = \"automatic\";\n    this.selectedTabIndex = undefined;\n    this.dark = false;\n    this.selectedTab = undefined;\n  }\n  _createClass(TabContext, [{\n    key: \"updateSelectedTab\",\n    value: function updateSelectedTab(newValue) {\n      this.selectedTab = newValue;\n    }\n  }, {\n    key: \"tabClickHandler\",\n    value: function tabClickHandler(event) {\n      if (this.selectedTabIndex === undefined && event.detail.contextId === this.contextId) {\n        this.selectedTab = event.detail.position;\n      }\n      this.tabSelect.emit({\n        tabIndex: event.detail.position\n      });\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.setControlledMode();\n      this.getChildren();\n      this.linkTabs();\n      this.attatchEventListeners();\n      this.setInitialTab();\n      this.configureTabs();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      this.configureTabs();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var _this2 = this;\n      if (this.activationType === \"manual\") {\n        this.tabList.removeEventListener(\"keydown\", function (event) {\n          return _this2.handleKeyBoardNavManual(event);\n        });\n      } else {\n        this.tabList.removeEventListener(\"keydown\", function (event) {\n          return _this2.handleKeyBoardNavAutomatic(event);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(\"slot\", null);\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"selectedTabIndex\": [\"updateSelectedTab\"]\n      };\n    }\n  }]);\n  return TabContext;\n}();\nexport { TabContext as ic_tab_context };"],"names":["TabContext","hostRef","_this","this","r","tabSelect","c","linkTabs","tabs","forEach","tab","index","tabId","concat","contextId","tabPanelId","shared","setAttribute","tabPosition","tabPanels","panelId","dark","tabList","getChildren","Array","from","host","querySelectorAll","find","filter","enabledTabs","getEnabledTabs","attatchEventListeners","activationType","addEventListener","event","handleKeyBoardNavAutomatic","handleKeyBoardNavManual","setControlledMode","undefined","selectedTabIndex","controlledMode","selectedTab","setInitialTab","focusedTabIndex","firstEnabledTabIndex","findIndex","configureTabs","selected","tabPanel","child","disabled","getIndexOfEnabledTab","allTabsIndex","keyboardSelectTab","enabledTabIndex","newIndex","focus","emit","tabIndex","keyboardFocusTab","key","preventDefault","length","value","newValue","detail","position","_this2","removeEventListener","h","get","g"],"sourceRoot":""}