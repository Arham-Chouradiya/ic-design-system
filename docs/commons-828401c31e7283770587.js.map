{"version":3,"file":"commons-828401c31e7283770587.js","mappings":"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","sources":["webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/chevron-icon-7927f709.js","webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/close-icon-2f02b42a.js","webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/helpers-8e57082b.js","webpack://ic-design-system/./node_modules/@ukic/web-components/dist/esm/types-dd515332.js"],"sourcesContent":["const Chevron = \"<svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M9.70687 6L8.29688 7.41L12.8769 12L8.29688 16.59L9.70687 18L15.7069 12L9.70687 6Z\\\" fill=\\\"currentColor\\\"/>\\n</svg>\\n\";\nexport { Chevron as C };","const closeIcon = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" fill=\\\"currentColor\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\\"/>\\n    <title>close icon</title>\\n</svg>\\n\";\nexport { closeIcon as c };","import { I as IcThemeForegroundEnum } from './types-dd515332.js';\nconst errorIcon = \"<svg aria-labelledby=\\\"error-title\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"#000000\\\">\\n    <title id=\\\"error-title\\\">Error</title>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\\\"/>\\n</svg>\\n\";\nconst infoIcon = \"<svg aria-labelledby=\\\"info-title\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"#000000\\\">\\n    <title id=\\\"info-title\\\">For your information</title>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\\\"/>\\n</svg>\\n\";\nconst neutralIcon = \"<svg aria-labelledby=\\\"neutral-title\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"#000000\\\">\\n    <title id=\\\"neutral-title\\\">Neutral</title>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\\\"/>\\n</svg>\\n\";\nconst successIcon = \"<svg aria-labelledby=\\\"success-title\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"#000000\\\">\\n    <title id=\\\"success-title\\\">Success</title>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\\\"/>\\n</svg>\\n\";\nconst warningIcon = \"<svg aria-labelledby=\\\"warning-title\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"#000000\\\">\\n    <title id=\\\"warning-title\\\">Warning</title>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\\\"/>\\n</svg>\\n\";\n\n// Global status icons\nconst VARIANT_ICONS = {\n  neutral: {\n    icon: neutralIcon,\n    ariaLabel: \"Neutral\"\n  },\n  info: {\n    icon: infoIcon,\n    ariaLabel: \"For your information\"\n  },\n  warning: {\n    icon: warningIcon,\n    ariaLabel: \"Warning\"\n  },\n  error: {\n    icon: errorIcon,\n    ariaLabel: \"Error\"\n  },\n  success: {\n    icon: successIcon,\n    ariaLabel: \"Success\"\n  }\n};\n// Global ARIA attributes\nconst IC_INHERITED_ARIA = [\"aria-atomic\", \"aria-busy\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-description\", \"aria-details\", \"aria-disabled\", \"aria-dropeffect\", \"aria-errormessage\", \"aria-flowto\", \"aria-grabbed\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-live\", \"aria-owns\", \"aria-relevant\", \"aria-roledescription\"];\nconst IC_DEVICE_SIZES = {\n  XS: 576,\n  S: 768,\n  M: 992,\n  L: 1200,\n  XL: 99999\n};\nconst IC_BLOCK_COLOR_COMPONENTS = [\"ic-hero\", \"ic-top-navigation\", \"ic-footer\", \"ic-side-navigation\", \"ic-alert\"];\nconst IC_FIXED_COLOR_COMPONENTS = [\"ic-alert\"];\nconst IC_BLOCK_COLOR_EXCEPTIONS = {\n  \"ic-alert\": [\"ic-link\"]\n};\n/* Range within which the chosen theme colour would not have a sufficient brightness difference with either of the black or white foreground colours\n * The brightness difference must be greater than 125 to provide good colour visibility\n * Calculated by:\n * - Using the brightness formula for both colours: https://www.w3.org/TR/AERT/#color-contrast\n * - Adding 125 to the brightness of the black foreground colour - RGB(11, 12, 12)\n * - Subtracting 125 from the brightness of the white foreground colour - RGB(255, 255, 255)\n */\nconst BLACK_MIN_COLOR_BRIGHTNESS = 136.701;\nconst WHITE_MAX_COLOR_BRIGHTNESS = 130;\nconst DARK_MODE_THRESHOLD = 133.3505;\n/**\n * Used to inherit global attributes set on the host. Called in componentWillLoad and assigned\n * to a variable that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = function (element) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (element.hasAttribute(attr)) {\n      const value = element.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = element.getAttribute(attr);\n      }\n      element.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\nconst debounceEvent = (event, wait) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait)\n  };\n};\nconst debounce = function (func) {\n  let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let timer;\n  return function () {\n    clearTimeout(timer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    timer = setTimeout(func, wait, ...args);\n  };\n};\n/**\n * This method is used to add a hidden input to a host element that contains\n * a Shadow DOM. It does not add the input inside of the Shadow root which\n * allows it to be picked up inside of forms. It should contain the same\n * values as the host element.\n *\n * @param always Add a hidden input even if the container does not use Shadow\n * @param container The element where the input will be added\n * @param name The name of the input\n * @param value The value of the input\n * @param disabled If true, the input is disabled\n */\nconst renderHiddenInput = (always, container, name, value, disabled) => {\n  if (name !== undefined && (always || hasShadowDom(container))) {\n    const inputs = container.querySelectorAll(\"input.ic-input\");\n    const inputEls = Array.from(inputs);\n    const filtered = inputEls.filter(el => container === el.parentElement);\n    let input = filtered[0];\n    if (input === null || input === undefined) {\n      input = container.ownerDocument.createElement(\"input\");\n      input.type = \"hidden\";\n      input.classList.add(\"ic-input\");\n      container.appendChild(input);\n    }\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || \"\";\n  }\n};\nconst removeHiddenInput = container => {\n  const inputs = container.querySelectorAll(\"input.ic-input\");\n  const inputEls = Array.from(inputs);\n  const filtered = inputEls.filter(el => container === el.parentElement);\n  const input = filtered[0];\n  input === null || input === void 0 ? void 0 : input.remove();\n};\nconst hasShadowDom = el => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nconst getInputHelperTextID = id => {\n  return id + \"-helper-text\";\n};\nconst getInputValidationTextID = id => {\n  return id + \"-validation-text\";\n};\nconst getInputDescribedByText = (inputId, helperText, validationText) => {\n  return \"\".concat(helperText ? getInputHelperTextID(inputId) : \"\", \" \").concat(validationText ? getInputValidationTextID(inputId) : \"\").trim();\n};\n/**\n * This method helps to understand the context in which a component exists,\n * to assist with choosing appropriate foreground colours to use. For example,\n * this method will help you use the 'white' version of a button if it's within\n * a block colour element using white foreground text.\n *\n * This only works for components/elements passed via <slot> and not if they\n * are part of an IC component.\n *\n * \"\"\n * @returns IcThemeForeground depending on the context\n */\nconst getThemeFromContext = function (el) {\n  let themeFromEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var _a;\n  const parentElement = el.parentElement || el.getRootNode().host.parentElement;\n  const blockColorParent = parentElement.closest(IC_BLOCK_COLOR_COMPONENTS.join(\",\"));\n  // If within a block color component\n  if (blockColorParent !== null) {\n    const parentTag = blockColorParent.tagName.toLowerCase();\n    const currentTag = el.tagName.toLowerCase();\n    if ((_a = IC_BLOCK_COLOR_EXCEPTIONS[parentTag]) === null || _a === void 0 ? void 0 : _a.includes(currentTag)) {\n      return IcThemeForegroundEnum.Default;\n    } else if (themeFromEvent !== null && !IC_FIXED_COLOR_COMPONENTS.includes(parentTag)) {\n      return themeFromEvent;\n    } else if (blockColorParent.classList.contains(IcThemeForegroundEnum.Dark)) {\n      return IcThemeForegroundEnum.Dark;\n    }\n    return IcThemeForegroundEnum.Light;\n  }\n  return IcThemeForegroundEnum.Default;\n};\nconst isMobileOrTablet = () => {\n  let isMobileOrTablet = false;\n  if (\"maxTouchPoints\" in navigator) {\n    isMobileOrTablet = navigator.maxTouchPoints > 0;\n  }\n  return isMobileOrTablet;\n};\n/**\n * Will create a button within the lightDOM which interacts with the parent form.\n * This is required as buttons within the shadowDOM will not invoke a submit or reset\n *\n * @param form - parent form element which contains shadowDom button\n * @param button - shadowDOM button\n */\nconst handleHiddenFormButtonClick = (form, button) => {\n  const hiddenFormButton = document.createElement(\"button\");\n  hiddenFormButton.setAttribute(\"type\", button.type);\n  hiddenFormButton.style.display = \"none\";\n  form.appendChild(hiddenFormButton);\n  hiddenFormButton.click();\n  hiddenFormButton.remove();\n};\nconst isEmptyString = value => {\n  if (!value) {\n    return true;\n  }\n  return value.trim().length === 0;\n};\n/**\n * Extracts the label using the value from an object. Requires the object to have a label and value property.\n * @param value - value from object\n * @param options - list of menu items\n * @returns - label corresponding to value\n */\nconst getLabelFromValue = (value, options) => {\n  var _a;\n  const ungroupedOptions = [];\n  if (options.length > 0 && options.map) {\n    options.map(option => {\n      if (option.children) {\n        option.children.map(option => ungroupedOptions.push(option));\n      } else {\n        ungroupedOptions.push(option);\n      }\n    });\n    return (_a = ungroupedOptions.find(option => option.value === value)) === null || _a === void 0 ? void 0 : _a.label;\n  }\n  return undefined;\n};\n/**\n * Filters the options based on the search string.\n * @param options - array of options\n * @param includeDescriptions - determines whether option descriptions are included when filtering options\n * @param searchString - string used to filter the options\n * @param position - whether the search string matches the start of or anywhere in the options\n * @returns filtered array of options\n */\nconst getFilteredMenuOptions = (options, includeDescriptions, searchString, position) => {\n  let rawFilteredOptions;\n  if (position === \"anywhere\") {\n    rawFilteredOptions = options.filter(option => {\n      var _a;\n      if (includeDescriptions) {\n        return option.label.toLowerCase().includes(searchString.toLowerCase()) || ((_a = option.description) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes(searchString.toLowerCase()));\n      } else {\n        return option.label.toLowerCase().includes(searchString.toLowerCase());\n      }\n    });\n  } else {\n    rawFilteredOptions = options.filter(option => {\n      var _a;\n      if (includeDescriptions) {\n        return option.label.toLowerCase().startsWith(searchString.toLowerCase()) || ((_a = option.description) === null || _a === void 0 ? void 0 : _a.toLowerCase().startsWith(searchString.toLowerCase()));\n      } else {\n        return option.label.toLowerCase().startsWith(searchString.toLowerCase());\n      }\n    });\n  }\n  return rawFilteredOptions;\n};\nconst deviceSizeMatches = size => window.matchMedia(\"(max-width: \".concat(size, \"px)\")).matches;\nconst getCurrentDeviceSize = () => {\n  if (deviceSizeMatches(DEVICE_SIZES.S)) {\n    return DEVICE_SIZES.S;\n  }\n  if (deviceSizeMatches(DEVICE_SIZES.M)) {\n    return DEVICE_SIZES.M;\n  }\n  if (deviceSizeMatches(DEVICE_SIZES.L)) {\n    return DEVICE_SIZES.L;\n  }\n  if (deviceSizeMatches(DEVICE_SIZES.XL)) {\n    return DEVICE_SIZES.XL;\n  }\n  //fallback needed as all of above get initialised to 0 in jest tests\n  return DEVICE_SIZES.UNDEFINED;\n};\nconst getCssProperty = cssVar => {\n  return getComputedStyle(document.documentElement).getPropertyValue(cssVar);\n};\n/**\n * Returns the brightness of the theme colour, calculated by using the theme RGB CSS values by:\n * - Multiplying each RGB value by a set number: https://www.w3.org/TR/AERT/#color-contrast\n * - Adding them together and dividing by 1000\n * This is a similar calculation to its CSS counterpart: \"--ic-theme-text\"\n * @returns number representing the brightness of the theme colour\n */\nconst getThemeColorBrightness = () => {\n  const themeRed = getCssProperty(\"--ic-theme-primary-r\");\n  const themeGreen = getCssProperty(\"--ic-theme-primary-g\");\n  const themeBlue = getCssProperty(\"--ic-theme-primary-b\");\n  return (parseInt(themeRed) * 299 + parseInt(themeGreen) * 587 + parseInt(themeBlue) * 114) / 1000;\n};\n/**\n * Returns if dark or light foreground colors should be used for color contrast reasons\n * @returns \"dark\" or \"light\"\n */\nconst getThemeForegroundColor = () => {\n  return getThemeColorBrightness() > DARK_MODE_THRESHOLD ? IcThemeForegroundEnum.Dark : IcThemeForegroundEnum.Light;\n};\nconst getSlot = (element, name) => {\n  if (element && element.querySelector) {\n    return element.querySelector(\"[slot=\\\"\".concat(name, \"\\\"]\"));\n  }\n  return null;\n};\nconst slotHasContent = (element, name) => getSlot(element, name) !== null;\nconst getSlotContent = (element, name) => {\n  const slot = getSlot(element, name);\n  if (slot) {\n    return getSlotElements(slot);\n  }\n  return null;\n};\nconst getSlotElements = slot => {\n  const slotContent = slot.firstElementChild;\n  if (slotContent !== null) {\n    const elements = slotContent.assignedElements ? slotContent.assignedElements() : slotContent.childNodes;\n    return elements.length ? elements : null;\n  } else {\n    //check for single element\n    return slot === null ? null : [slot];\n  }\n};\nconst getNavItemParentDetails = el => {\n  let navType = {\n    navType: \"\",\n    parent: null\n  };\n  switch (getParentElementType(el)) {\n    case \"IC-NAVIGATION-GROUP\":\n      navType = getNavItemParentDetails(el.parentElement);\n      break;\n    case \"IC-TOP-NAVIGATION\":\n      navType = {\n        navType: \"top\",\n        parent: getParentElement(el)\n      };\n      break;\n    case \"IC-SIDE-NAVIGATION\":\n      navType = {\n        navType: \"side\",\n        parent: getParentElement(el)\n      };\n      break;\n    case \"IC-PAGE-HEADER\":\n      navType = {\n        navType: \"page-header\",\n        parent: null\n      };\n      break;\n  }\n  return navType;\n};\nconst DEVICE_SIZES = {\n  XS: Number(getCssProperty(\"--ic-breakpoint-xs\").replace(\"px\", \"\")),\n  S: Number(getCssProperty(\"--ic-breakpoint-sm\").replace(\"px\", \"\")),\n  M: Number(getCssProperty(\"--ic-breakpoint-md\").replace(\"px\", \"\")),\n  L: Number(getCssProperty(\"--ic-breakpoint-lg\").replace(\"px\", \"\")),\n  XL: Number(getCssProperty(\"--ic-breakpoint-xl\").replace(\"px\", \"\")),\n  UNDEFINED: 1200\n};\nconst hasValidationStatus = (status, disabled) => {\n  return status !== \"\" && !disabled;\n};\nconst isSlotUsed = (element, slotName) => {\n  return Array.from(element.children).some(child => child.getAttribute(\"slot\") === slotName);\n};\n// added as a common method to allow detection of gatsby hydration issue, where (camelCase) props are initially undefined & then update\n// with a value. Allows a callback function to be executed when this is the case\nconst onComponentPropUndefinedChange = (oldValue, newValue, callback) => {\n  if (oldValue === undefined && newValue !== oldValue) {\n    callback();\n  }\n};\nconst onComponentRequiredPropUndefined = (props, component) => {\n  for (let i = 0; i < props.length; i++) {\n    const {\n      prop,\n      propName\n    } = props[i];\n    if (prop === null || prop === undefined) {\n      console.error(\"No \".concat(propName, \" specified for \").concat(component, \" component - prop '\").concat(propName, \"' (web components) / '\").concat(kebabToCamelCase(propName), \"' (react) required\"));\n    }\n  }\n};\nconst kebabToCamelCase = kebabCase => {\n  kebabCase = kebabCase.toLowerCase();\n  const individualWords = kebabCase.split(\"-\");\n  let camelCase = individualWords[0];\n  for (let i = 1; i < individualWords.length; i++) {\n    camelCase += individualWords[i].substring(0, 1).toUpperCase() + individualWords[i].substring(1);\n  }\n  return camelCase;\n};\nconst checkResizeObserver = callbackFn => {\n  if (typeof window !== \"undefined\" && typeof window.ResizeObserver !== \"undefined\") {\n    callbackFn();\n  }\n};\nconst hex2dec = function (v) {\n  return parseInt(v, 16);\n};\nconst hexToRgba = hex => {\n  let c;\n  if (hex.length === 4) {\n    c = hex.replace(\"#\", \"\").split(\"\");\n    return {\n      r: hex2dec(c[0] + c[0]),\n      g: hex2dec(c[1] + c[1]),\n      b: hex2dec(c[2] + c[2]),\n      a: 1\n    };\n  } else {\n    return {\n      r: hex2dec(hex.slice(1, 3)),\n      g: hex2dec(hex.slice(3, 5)),\n      b: hex2dec(hex.slice(5)),\n      a: 1\n    };\n  }\n};\nconst rgbaStrToObj = rgbaStr => {\n  const fourthChar = rgbaStr.slice(3, 4);\n  let colorRGBA;\n  if (fourthChar.toLowerCase() === \"a\") {\n    colorRGBA = {\n      r: null,\n      g: null,\n      b: null,\n      a: null\n    };\n    const rgba = rgbaStr.substring(5, rgbaStr.length - 1).replace(/ /g, \"\").split(\",\");\n    colorRGBA.r = Number(rgba[0]);\n    colorRGBA.g = Number(rgba[1]);\n    colorRGBA.b = Number(rgba[2]);\n    colorRGBA.a = Number(rgba[3]);\n  } else {\n    colorRGBA = {\n      r: null,\n      g: null,\n      b: null,\n      a: 1\n    };\n    const rgb = rgbaStr.substring(4, rgbaStr.length - 1).replace(/ /g, \"\").split(\",\");\n    colorRGBA.r = Number(rgb[0]);\n    colorRGBA.g = Number(rgb[1]);\n    colorRGBA.b = Number(rgb[2]);\n  }\n  return colorRGBA;\n};\nconst elementOverflowsX = element => {\n  return element.scrollWidth > element.clientWidth;\n};\n/**\n *\n * @param child - The child element\n * @returns string\n */\nconst getParentElementType = child => child.parentElement.tagName;\nconst getParentElement = child => child.parentElement;\nconst hasClassificationBanner = () => {\n  return document.querySelector(\"ic-classification-banner:not([inline='true'])\") ? true : false;\n};\nconst getForm = el => {\n  return el.closest(\"FORM\");\n};\nconst addFormResetListener = (el, callbackFn) => {\n  const form = getForm(el);\n  if (form !== null) {\n    form.addEventListener(\"reset\", callbackFn);\n  }\n};\nconst removeFormResetListener = (el, callbackFn) => {\n  const form = getForm(el);\n  if (form !== null) {\n    form.removeEventListener(\"reset\", callbackFn);\n  }\n};\nconst pxToRem = function (px) {\n  let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  const tempPx = parseInt(px);\n  return \"\".concat(1 / base * tempPx, \"rem\");\n};\nconst removeDisabledFalse = (disabled, element) => {\n  if (!disabled) {\n    element.removeAttribute(\"disabled\");\n  }\n};\nexport { getCssProperty as A, pxToRem as B, getThemeColorBrightness as C, DEVICE_SIZES as D, BLACK_MIN_COLOR_BRIGHTNESS as E, hexToRgba as F, rgbaStrToObj as G, getSlot as H, IC_DEVICE_SIZES as I, getParentElement as J, debounceEvent as K, isEmptyString as L, successIcon as M, elementOverflowsX as N, getInputHelperTextID as O, getInputValidationTextID as P, warningIcon as Q, errorIcon as R, VARIANT_ICONS as V, WHITE_MAX_COLOR_BRIGHTNESS as W, onComponentRequiredPropUndefined as a, getThemeFromContext as b, checkResizeObserver as c, addFormResetListener as d, removeFormResetListener as e, renderHiddenInput as f, getCurrentDeviceSize as g, removeHiddenInput as h, isSlotUsed as i, getInputDescribedByText as j, hasValidationStatus as k, getThemeForegroundColor as l, hasClassificationBanner as m, inheritAttributes as n, onComponentPropUndefinedChange as o, IC_INHERITED_ARIA as p, getNavItemParentDetails as q, removeDisabledFalse as r, slotHasContent as s, getParentElementType as t, getSlotElements as u, getSlotContent as v, handleHiddenFormButtonClick as w, getFilteredMenuOptions as x, getLabelFromValue as y, isMobileOrTablet as z };","var IcInformationStatus;\n(function (IcInformationStatus) {\n  IcInformationStatus[\"Warning\"] = \"warning\";\n  IcInformationStatus[\"Error\"] = \"error\";\n  IcInformationStatus[\"Success\"] = \"success\";\n})(IcInformationStatus || (IcInformationStatus = {}));\nvar IcThemeForegroundEnum;\n(function (IcThemeForegroundEnum) {\n  IcThemeForegroundEnum[\"Default\"] = \"default\";\n  IcThemeForegroundEnum[\"Dark\"] = \"dark\";\n  IcThemeForegroundEnum[\"Light\"] = \"light\";\n})(IcThemeForegroundEnum || (IcThemeForegroundEnum = {}));\nexport { IcThemeForegroundEnum as I, IcInformationStatus as a };"],"names":["Chevron","closeIcon","errorIcon","successIcon","warningIcon","VARIANT_ICONS","neutral","icon","ariaLabel","info","warning","error","success","IC_INHERITED_ARIA","IC_DEVICE_SIZES","XS","S","M","L","XL","IC_BLOCK_COLOR_COMPONENTS","IC_FIXED_COLOR_COMPONENTS","IC_BLOCK_COLOR_EXCEPTIONS","BLACK_MIN_COLOR_BRIGHTNESS","WHITE_MAX_COLOR_BRIGHTNESS","inheritAttributes","element","attributeObject","arguments","length","undefined","forEach","attr","hasAttribute","getAttribute","removeAttribute","debounceEvent","event","wait","original","_original","emit","debounce","bind","func","timer","clearTimeout","_len","args","Array","_key","setTimeout","renderHiddenInput","always","container","name","value","disabled","hasShadowDom","inputs","querySelectorAll","input","from","filter","el","parentElement","ownerDocument","createElement","type","classList","add","appendChild","removeHiddenInput","remove","shadowRoot","attachShadow","getInputHelperTextID","id","getInputValidationTextID","getInputDescribedByText","inputId","helperText","validationText","concat","trim","getThemeFromContext","themeFromEvent","_a","blockColorParent","getRootNode","host","closest","join","parentTag","tagName","toLowerCase","currentTag","includes","I","contains","isMobileOrTablet","navigator","maxTouchPoints","handleHiddenFormButtonClick","form","button","hiddenFormButton","document","setAttribute","style","display","click","isEmptyString","getLabelFromValue","options","ungroupedOptions","map","option","children","push","find","label","getFilteredMenuOptions","includeDescriptions","searchString","position","rawFilteredOptions","description","startsWith","deviceSizeMatches","size","window","matchMedia","matches","getCurrentDeviceSize","DEVICE_SIZES","UNDEFINED","getCssProperty","cssVar","getComputedStyle","documentElement","getPropertyValue","getThemeColorBrightness","themeRed","themeGreen","themeBlue","parseInt","getThemeForegroundColor","getSlot","querySelector","slotHasContent","getSlotContent","slot","getSlotElements","slotContent","firstElementChild","elements","assignedElements","childNodes","getNavItemParentDetails","navType","parent","getParentElementType","getParentElement","Number","replace","hasValidationStatus","status","isSlotUsed","slotName","some","child","onComponentPropUndefinedChange","oldValue","newValue","callback","onComponentRequiredPropUndefined","props","component","i","prop","propName","console","kebabToCamelCase","kebabCase","individualWords","split","camelCase","substring","toUpperCase","checkResizeObserver","callbackFn","ResizeObserver","hex2dec","v","hexToRgba","hex","c","r","g","b","a","slice","rgbaStrToObj","rgbaStr","colorRGBA","rgba","rgb","elementOverflowsX","scrollWidth","clientWidth","hasClassificationBanner","getForm","addFormResetListener","addEventListener","removeFormResetListener","removeEventListener","pxToRem","px","base","tempPx","removeDisabledFalse","IcInformationStatus","IcThemeForegroundEnum"],"sourceRoot":""}